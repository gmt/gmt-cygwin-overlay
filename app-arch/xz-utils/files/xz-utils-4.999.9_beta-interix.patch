rejected upstream:
(21:18) <    Larhzu> Just add --enable-assume-ram=128 or something like
that.

diff -ru -x '*.Po' -x '*.Plo' xz-4.999.9beta.orig/src/common/physmem.h xz-4.999.9beta/src/common/physmem.h
--- xz-4.999.9beta.orig/src/common/physmem.h	2009-09-23 14:06:03 +0200
+++ xz-4.999.9beta/src/common/physmem.h	2009-09-23 14:06:30 +0200
@@ -126,6 +126,12 @@
 				!= (unsigned long)(-1))
 		ret = (uint64_t)(meminfo.total_number_of_physical_pages)
 				* 4096;
+
+#elif defined(__INTERIX)
+	// i know this is bit of a hack, but xz fails on decoding the _first_ file
+	// tried with an error, that 12MiB is not enough... :(
+	// I'm assuming 1024MB RAM here on all interix boxes...
+	ret = (1024 * (1024 * 1024));
 #endif
 
 	return ret;
diff -ru -x '*.Po' -x '*.Plo' xz-4.999.9beta.orig/src/common/sysdefs.h xz-4.999.9beta/src/common/sysdefs.h
--- xz-4.999.9beta.orig/src/common/sysdefs.h	2009-09-23 14:06:03 +0200
+++ xz-4.999.9beta/src/common/sysdefs.h	2009-09-23 14:03:41 +0200
@@ -89,6 +89,12 @@
 #	define UINT64_MAX UINT64_C(18446744073709551615)
 #endif
 
+// Interix has broken header files, which typedef size_t to unsigned long,
+// but a few lines later define SIZE_MAX to INT32_MAX...
+#ifdef __INTERIX
+#	undef SIZE_MAX
+#endif
+
 // The code currently assumes that size_t is either 32-bit or 64-bit.
 #ifndef SIZE_MAX
 #	if SIZEOF_SIZE_T == 4
