http://bugs.python.org/issue13496

diff -urN Python-2.7.3.orig/Lib/test/test_bisect.py Python-2.7.3/Lib/test/test_bisect.py
--- Python-2.7.3.orig/Lib/test/test_bisect.py	2012-04-09 16:07:31.000000000 -0700
+++ Python-2.7.3/Lib/test/test_bisect.py	2012-10-06 02:45:08.912149200 -0700
@@ -122,6 +122,13 @@
         self.assertRaises(ValueError, mod.insort_left, [1, 2, 3], 5, -1, 3),
         self.assertRaises(ValueError, mod.insort_right, [1, 2, 3], 5, -1, 3),
 
+    def test_large_range(self):
+        # Issue 13496
+        mod = self.module
+        data = xrange(sys.maxsize-1)
+        self.assertEqual(mod.bisect_left(data, sys.maxsize-3), sys.maxsize-3)
+        self.assertEqual(mod.bisect_right(data, sys.maxsize-3), sys.maxsize-2)
+
     def test_random(self, n=25):
         from random import randrange
         for i in xrange(n):
diff -urN Python-2.7.3.orig/Modules/_bisectmodule.c Python-2.7.3/Modules/_bisectmodule.c
--- Python-2.7.3.orig/Modules/_bisectmodule.c	2012-04-09 16:07:33.000000000 -0700
+++ Python-2.7.3/Modules/_bisectmodule.c	2012-10-06 02:45:08.931151100 -0700
@@ -21,7 +21,13 @@
             return -1;
     }
     while (lo < hi) {
-        mid = (lo + hi) / 2;
+        /* The (size_t)cast ensures that the addition and subsequent division
+           are performed as unsigned operations, avoiding difficulties from
+           signed overflow.  (See issue 13496.) */
+        printf("lo: %d\n", lo);
+        printf("hi: %d\n", hi);
+        printf("mid: %d\n", mid);
+        mid = ((size_t)lo + hi) / 2;
         litem = PySequence_GetItem(list, mid);
         if (litem == NULL)
             return -1;
@@ -122,7 +128,10 @@
             return -1;
     }
     while (lo < hi) {
-        mid = (lo + hi) / 2;
+        /* The (size_t)cast ensures that the addition and subsequent division
+           are performed as unsigned operations, avoiding difficulties from
+           signed overflow.  (See issue 13496.) */
+        mid = ((size_t)lo + hi) / 2;
         litem = PySequence_GetItem(list, mid);
         if (litem == NULL)
             return -1;
