===== mutual sub-directory: "sys-devel/gcc-config" =====
----[ "sys-devel/gcc-config/gcc-config-1.5-r2.ebuild" ]----->8----->
--- PORTAGE/sys-devel/gcc-config/gcc-config-1.5-r2.ebuild
+++ OVERLAY/sys-devel/gcc-config/gcc-config-1.5-r2.ebuild
@@ -37,7 +37,7 @@
 	newbin ${PN}-${PV} ${PN} || die "install gcc-config"
 	sed -i \
 		-e "s:@GENTOO_LIBDIR@:$(get_libdir):g" \
-		"${ED}"/usr/bin/${PN}
+		"${ED}"usr/bin/${PN}
 
 	exeinto /usr/$(get_libdir)/misc
 	newexe wrapper gcc-config || die "install wrapper"
@@ -45,17 +45,17 @@
 
 pkg_postinst() {
 	# Scrub eselect-compiler remains
-	if [[ -e ${EROOT}/etc/env.d/05compiler ]] ; then
-		rm -f "${EROOT}"/etc/env.d/05compiler
+	if [[ -e ${EROOT}etc/env.d/05compiler ]] ; then
+		rm -f "${EROOT}"etc/env.d/05compiler
 	fi
 
 	# Make sure old versions dont exist #79062
-	rm -f "${EROOT}"/usr/sbin/gcc-config
+	rm -f "${EROOT}"usr/sbin/gcc-config
 
 	# We not longer use the /usr/include/g++-v3 hacks, as
 	# it is not needed ...
-	[[ -L ${EROOT}/usr/include/g++ ]] && rm -f "${EROOT}"/usr/include/g++
-	[[ -L ${EROOT}/usr/include/g++-v3 ]] && rm -f "${EROOT}"/usr/include/g++-v3
+	[[ -L ${EROOT}usr/include/g++ ]] && rm -f "${EROOT}"usr/include/g++
+	[[ -L ${EROOT}usr/include/g++-v3 ]] && rm -f "${EROOT}"usr/include/g++-v3
 
 	# Do we have a valid multi ver setup ?
 	local x
<-----8<-----
===== mutual sub-directory: "sys-devel/gcc-config/files" =====
----[ "sys-devel/gcc-config/files/gcc-config-1.4.1" ]----->8----->
--- PORTAGE/sys-devel/gcc-config/files/gcc-config-1.4.1
+++ OVERLAY/sys-devel/gcc-config/files/gcc-config-1.4.1
@@ -59,7 +59,7 @@
 	#
 
 	local varname=${1:-CHOST}
-	local conf=${EROOT}/etc/make.conf
+	local conf=${EROOT}etc/make.conf
 	local ret=$(source "${conf}" 2>/dev/null ; echo ${!varname})
 	if [[ -z ${ret} ]] ; then
 		# newer portage supports spaces between the var and =
@@ -81,8 +81,8 @@
 	#
 	# Then we try /etc/env.d/gcc/config-${CTARGET}
 	#
-	if [[ -s ${EROOT}/etc/env.d/gcc/config-${CTARGET} ]] ; then
-		ret=$(split_gcc_ver $(eval $(<"${EROOT}"/etc/env.d/gcc/config-${CTARGET}) ; echo ${CURRENT}))
+	if [[ -s ${EROOT}etc/env.d/gcc/config-${CTARGET} ]] ; then
+		ret=$(split_gcc_ver $(eval $(<"${EROOT}"etc/env.d/gcc/config-${CTARGET}) ; echo ${CURRENT}))
 		echo ${ret% *}
 	fi
 }
@@ -97,8 +97,9 @@
 	fi
 
 	# make sure portage isnt broken
-	if python -V &>/dev/null ; then
-		export REAL_CHOST=$(env -i EPREFIX="${EPREFIX}" "$(PATH="${EPREFIX}/usr/bin:${PATH}" type -P portageq)" envvar CHOST 2>/dev/null)
+	local nupath="${EPREFIX}/bin:${EPREFIX}/usr/bin:${PATH}" 
+	if env -i PATH="${nupath}" "$(PATH="${nupath}" type -P python)" -V &>/dev/null ; then
+		export REAL_CHOST=$(env -i PATH="${nupath}" EPREFIX="${EPREFIX}" "$(PATH="${nupath}" type -P portageq)" envvar CHOST 2>/dev/null)
 	else
 		ewarn "Python seems to be broken, attempting to locate CHOST ourselves ..."
 		export REAL_CHOST=$(try_real_hard_to_find_CHOST)
@@ -107,7 +108,7 @@
 	if [[ -z ${REAL_CHOST} ]] ; then
 		eerror "${argv0}: Could not get portage CHOST!"
 		eerror "${argv0}: You should verify that CHOST is set in one of these places:"
-		eerror "${argv0}:  - ${EROOT}/etc/make.conf"
+		eerror "${argv0}:  - ${EROOT}etc/make.conf"
 		eerror "${argv0}:  - active environment"
 		exit 1
 	fi
@@ -138,7 +139,7 @@
 			# one of the specified paths
 			ret=1
 			for p in ${paths} ; do
-				[[ -f ${p}/${f} ]] && ret=0 && break
+				[[ -f ${p%/}/${f} ]] && ret=0 && break
 			done
 			[[ ${ret} == 1 ]] && break
 		fi
@@ -175,8 +176,8 @@
 		# compilers for default CHOST will be used to compile stuff,
 		# and thus we want all their lib paths in /etc/ld.so.conf ...
 		get_real_chost
-		GCC_PROFILES=$(LC_ALL="C" ls -r ${GCC_ENV_D}/${REAL_CHOST}-*)
-		GCC_PROFILES="${GCC_ENV_D}/${CC_COMP} ${GCC_PROFILES}"
+		GCC_PROFILES=$(LC_ALL="C" ls -r ${GCC_ENV_D%/}/${REAL_CHOST}-*)
+		GCC_PROFILES="${GCC_ENV_D%/}/${CC_COMP} ${GCC_PROFILES}"
 
 		# Extract all LDPATH's for our CHOST
 		MY_LDPATH=""
@@ -202,41 +203,41 @@
 	fi
 
 	# Translate old PATH/ROOTPATH to GCC_PATH
-	cp -p "${GCC_ENV_D}/${CC_COMP}" "${GCC_ENV_D}/${CC_COMP}.gcc-config-ref" || return 1
+	cp -p "${GCC_ENV_D%/}/${CC_COMP}" "${GCC_ENV_D%/}/${CC_COMP}.gcc-config-ref" || return 1
 	GCC_PATH=$(
 		unset GCC_PATH PATH ROOTPATH
-		source "${GCC_ENV_D}/${CC_COMP}"
+		source "${GCC_ENV_D%/}/${CC_COMP}"
 		echo ${GCC_PATH:-${PATH:-${ROOTPATH}}}
 	)
 	${SED} -i \
 		-e '/^PATH=/d' \
 		-e '/^ROOTPATH=/d' \
 		-e '/^GCC_PATH=/d' \
-		"${GCC_ENV_D}/${CC_COMP}" || return 1
-	echo "GCC_PATH=\"${GCC_PATH}\"" >> "${GCC_ENV_D}/${CC_COMP}" || return 1
-	touch -r "${GCC_ENV_D}/${CC_COMP}.gcc-config-ref" "${GCC_ENV_D}/${CC_COMP}" || return 1
-	rm -f "${GCC_ENV_D}/${CC_COMP}.gcc-config-ref" || return 1
+		"${GCC_ENV_D%/}/${CC_COMP}" || return 1
+	echo "GCC_PATH=\"${GCC_PATH}\"" >> "${GCC_ENV_D%/}/${CC_COMP}" || return 1
+	touch -r "${GCC_ENV_D%/}/${CC_COMP}.gcc-config-ref" "${GCC_ENV_D%/}/${CC_COMP}" || return 1
+	rm -f "${GCC_ENV_D%/}/${CC_COMP}.gcc-config-ref" || return 1
 
 	# Setup things properly again for this profile
 	unset GCC_SPECS LDPATH
-	source "${GCC_ENV_D}/${CC_COMP}"
+	source "${GCC_ENV_D%/}/${CC_COMP}"
 	OLD_CC_COMP=$(get_current_profile)
 
 	# What kind of env.d entry are we going to generate ?
 	if is_cross_compiler ; then
-		echo "PATH=\"${GCC_PATH}\"" > "${ENV_D}/05gcc-${CTARGET}"
-		echo "ROOTPATH=\"${GCC_PATH}\"" >> "${ENV_D}/05gcc-${CTARGET}"
-		echo "CURRENT=${CC_COMP}" > "${GCC_ENV_D}/config-${CTARGET}"
+		echo "PATH=\"${GCC_PATH}\"" > "${ENV_D%/}/05gcc-${CTARGET}"
+		echo "ROOTPATH=\"${GCC_PATH}\"" >> "${ENV_D%/}/05gcc-${CTARGET}"
+		echo "CURRENT=${CC_COMP}" > "${GCC_ENV_D%/}/config-${CTARGET}"
 	else
 		# Pass all by default
 		awk '!/^(STDCXX_INCDIR|LDPATH|CC|CXX|CTARGET|GCCBITS|GCC_SPECS|GCC_PATH)=/ {print $0}' \
-			"${GCC_ENV_D}/${CC_COMP}" > "${ENV_D}/05gcc-${CTARGET}"
-		echo "LDPATH=\"${MY_LDPATH}\"" >> "${ENV_D}/05gcc-${CTARGET}"
-		echo "PATH=\"${GCC_PATH}\"" >> "${ENV_D}/05gcc-${CTARGET}"
-		echo "ROOTPATH=\"${GCC_PATH}\"" >> "${ENV_D}/05gcc-${CTARGET}"
+			"${GCC_ENV_D%/}/${CC_COMP}" > "${ENV_D%/}/05gcc-${CTARGET}"
+		echo "LDPATH=\"${MY_LDPATH}\"" >> "${ENV_D%/}/05gcc-${CTARGET}"
+		echo "PATH=\"${GCC_PATH}\"" >> "${ENV_D%/}/05gcc-${CTARGET}"
+		echo "ROOTPATH=\"${GCC_PATH}\"" >> "${ENV_D%/}/05gcc-${CTARGET}"
 		if [[ -n ${GCC_SPECS} ]] ; then
 			if files_exist ${MY_LDPATH} ${GCC_SPECS} ; then
-				echo "GCC_SPECS=\"${GCC_SPECS}\"" >> "${ENV_D}/05gcc-${CTARGET}"
+				echo "GCC_SPECS=\"${GCC_SPECS}\"" >> "${ENV_D%/}/05gcc-${CTARGET}"
 			else
 				echo
 				ewarn "Your GCC spec configurations are broken."
@@ -247,7 +248,7 @@
 			# People need to rebuild their gcc or setting GCC_SPECS to
 			# "" will cause issues again :(
 			if [[ ${ROOT} != "/" ]] ; then
-				echo "GCC_SPECS=\"\"" >> "${ENV_D}/05gcc-${CTARGET}"
+				echo "GCC_SPECS=\"\"" >> "${ENV_D%/}/05gcc-${CTARGET}"
 			else
 				if [[ -x "${EPREFIX}"/usr/bin/gcc ]] && ! GCC_SPECS="" "${EPREFIX}"/usr/bin/gcc -v &>/dev/null ; then
 					echo
@@ -256,28 +257,28 @@
 					ewarn "http://bugs.gentoo.org/68395"
 					echo
 				else
-					echo "GCC_SPECS=\"\"" >> "${ENV_D}/05gcc-${CTARGET}"
+					echo "GCC_SPECS=\"\"" >> "${ENV_D%/}/05gcc-${CTARGET}"
 				fi
 			fi
 		fi
 
-		echo "CURRENT=${CC_COMP}" > "${GCC_ENV_D}/config-${CTARGET}"
+		echo "CURRENT=${CC_COMP}" > "${GCC_ENV_D%/}/config-${CTARGET}"
 
 		# Help out the gcc wrapper
-		rm -f "${GCC_ENV_D}/NATIVE" "${GCC_ENV_D}/.NATIVE"
-		ln -sf ${CC_COMP} "${GCC_ENV_D}/.NATIVE"
+		rm -f "${GCC_ENV_D%/}/NATIVE" "${GCC_ENV_D%/}/.NATIVE"
+		ln -sf ${CC_COMP} "${GCC_ENV_D%/}/.NATIVE"
 
 		# Punt old files
-		rm -f "${ENV_D}/05gcc"
-		rm -f "${ENV_D}/05gcc-${CTARGET}"-*
-		rm -f "${GCC_ENV_D}/config"
-		rm -f "${GCC_ENV_D}/config-${CTARGET}"-*
+		rm -f "${ENV_D%/}/05gcc"
+		rm -f "${ENV_D%/}/05gcc-${CTARGET}"-*
+		rm -f "${GCC_ENV_D%/}/config"
+		rm -f "${GCC_ENV_D%/}/config-${CTARGET}"-*
 	fi
 
 	# Find the bin wrapper
 	local wrapper
 	for wrapper in ${GENTOO_LIBDIR} lib lib64 lib32 lib ; do
-		wrapper="${EROOT}usr/${wrapper}/misc/gcc-config"
+		wrapper="${EROOT}usr/${wrapper%/}/misc/gcc-config"
 		[[ -e ${wrapper} ]] && break
 	done
 
@@ -287,9 +288,9 @@
 		[[ ${x} != ${CTARGET}-* ]] && is_cross_compiler && continue
 
 		# Make sure we have no stale wrappers
-		rm -f "${EROOT}/usr/bin/${x}"
+		rm -f "${EROOT}usr/bin/${x}"
 		[[ ${x:${#x}-3} == "gcc" || ${x:${#x}-3} == "g++" ]] \
-			&& rm -f "${EROOT}/usr/bin/${x}"{32,64}
+			&& rm -f "${EROOT}usr/bin/${x}"{32,64}
 
 		# Only install a wrapper if the binary exists ...
 		# We want to figure out the 'reference file' for each 
@@ -298,37 +299,43 @@
 		# happy.  See Bug #70548 for more info.
 		local ref
 		case ${x} in
-			cc)  ref=${ROOT}/${GCC_PATH}/gcc;;
-			f77) ref=${ROOT}/${GCC_PATH}/g77;;
-			*)   ref=${ROOT}/${GCC_PATH}/${x};;
+			cc)  ref=${ROOT%/}/${GCC_PATH#/}
+			     ref=${ref%/}/gcc;;
+			f77) ref=${ROOT%/}/${GCC_PATH#/}
+			     ref=${ref%/}/g77;;
+			*)   ref=${ROOT%/}/${GCC_PATH#/}
+			     ref=${ref%/}/${x#/};;
 		esac
 		if [[ -x ${ref} ]] ; then
-			cp -f "${wrapper}" "${EROOT}/usr/bin/${x}"
-			touch -r "${ref}" "${EROOT}/usr/bin/${x}"
+			cp -f "${wrapper}" "${EROOT}usr/bin/${x#/}"
+			touch -r "${ref}" "${EROOT}usr/bin/${x#/}"
 
 			# Install 32bit and 64bit wrappers if need be
 			# This should probably get folded back into the wrapper ...
 			if [[ ${x:${#x}-3} == "gcc" ]] || [[ ${x:${#x}-3} == "g++" ]] ; then
 				for bits in ${GCCBITS} ; do
-					cp -f "${wrapper}" "${EROOT}/usr/bin/${x}${bits}"
+					cp -f "${wrapper}" "${EROOT}usr/bin/${x#/}${bits}"
 				done
 			fi
 		fi
 	done
 	# legacy cruft, make sure we dont leave it laying around #143205
-	rm -f "${EROOT}/usr/bin/${CTARGET}-cc"
+	rm -f "${EROOT}usr/bin/${CTARGET}-cc"
 	# Only install cpp if switching to a native one
 	if ! is_cross_compiler && [[ ${CTARGET} != *-solaris* ]] ; then
-		rm -f "${EROOT}/lib/cpp"
-		cp -f "${wrapper}" "${EROOT}/lib/cpp"
+		rm -f "${EROOT}lib/cpp"
+		cp -f "${wrapper}" "${EROOT}lib/cpp"
 	fi
 
 	# Relocate random crap
 	if ! is_cross_compiler ; then
-		if [[ -e ${EROOT}/usr/${GENTOO_LIBDIR}/pkgconfig/libgcj-${CC_COMP_VERSION}.pc ]] ; then
+		gld="${GENTOO_LIBDIR%/}"
+		gld="${gld#/}"
+		if [[ -e ${EROOT}usr/${gld}/pkgconfig/libgcj-${CC_COMP_VERSION}.pc ]] ; then
+
 			local mver=${CC_COMP_VERSION:0:3}
 			for x in "" "-${mver}" ; do
-				x="${EROOT}/usr/lib/pkgconfig/libgcj${x}.pc"
+				x="${EROOT}usr/lib/pkgconfig/libgcj${x}.pc"
 				rm -f "${x}"
 				ln -s libgcj-${CC_COMP_VERSION}.pc "${x}"
 			done
@@ -358,10 +365,10 @@
 		# make sure we do the current one as last, such that the
 		# pointers for the unversioned libs point to the currently
 		# selected version.
-		GCC_PROFILES=$(LC_ALL="C" ls ${GCC_ENV_D}/${REAL_CHOST}-*)
+		GCC_PROFILES=$(LC_ALL="C" ls ${GCC_ENV_D%/}/${REAL_CHOST}-*)
 
-		local dstlibgcc=${EROOT}/usr/${REAL_CHOST}/lib/gcc
-		local dstlib=${EROOT}/lib
+		local dstlibgcc=${EROOT}usr/${REAL_CHOST}/lib/gcc
+		local dstlib=${EROOT}lib
 
 		# Prepare empty directories first
 		local temporary=.gcc.config.new
@@ -476,11 +483,11 @@
 
 			# when using some simple shell script wrappers (again :)),
 			# there may be no libs around!
-			if [[ -n $(ls "${sourcedir}"/lib${libname}.*${LIBSUFFIX}* 2>/dev/null) ]]; then
-				cp -fpP "${sourcedir}"/lib${libname}.*${LIBSUFFIX}* "${targetdir}" || return 1
+			if [[ -n $(ls "${sourcedir%/}"/lib${libname}.*${LIBSUFFIX}* 2>/dev/null) ]]; then
+				cp -fpP "${sourcedir%/}"/lib${libname}.*${LIBSUFFIX}* "${targetdir}" || return 1
 				# we do not need the unversioned lib, as linking
 				# is done against the used gcc's private copy.
-				rm -f "${targetdir}"/lib${libname}.${LIBSUFFIX} || return 1
+				rm -f "${targetdir%/}"/lib${libname}.${LIBSUFFIX} || return 1
 			fi
 		}
 
@@ -494,9 +501,9 @@
 				if [[ ${targetdir} == *${EPREFIX}/lib ]]; then
 					echo "WARNING: not cleaning ${targetdir}" >&2
 				else
-					for f in "${targetdir}"/*; do
+					for f in "${targetdir%/}"/*; do
 						[[ ${f} == ${sourcedir} ]] && continue
-						[[ -e "${sourcedir}/${f##*/}" ]] && continue
+						[[ -e "${sourcedir%/}/${f##*/}" ]] && continue
 						rm -f "${f}"
 					done
 				fi
@@ -509,17 +516,17 @@
 			for f in "${sourcedir}"/*; do
 				[[ -e ${f} && -L ${f} ]] || continue
 				# use backups: hpux cannot overwrite sharedlibs in use: "Text file busy"
-				rm -f "${targetdir}"/${f##*/}*'~' >/dev/null 2>&1
-				mv -f --backup=numbered --suffix='~' "${f}" "${targetdir}"/${f##*/} || return 1
-				rm -f "${targetdir}"/${f##*/}*'~' >/dev/null 2>&1
+				rm -f "${targetdir%/}"/${f##*/}*'~' >/dev/null 2>&1
+				mv -f --backup=numbered --suffix='~' "${f}" "${targetdir%/}"/${f##*/} || return 1
+				rm -f "${targetdir%/}"/${f##*/}*'~' >/dev/null 2>&1
 			done
 
-			for f in "${sourcedir}"/*; do
+			for f in "${sourcedir%/}"/*; do
 				[[ -f "${f}" ]] || continue
 				# use backups: hpux cannot overwrite sharedlibs in use: "Text file busy"
-				rm -f "${targetdir}"/${f##*/}*'~' >/dev/null 2>&1
-				mv -f --backup=numbered --suffix='~' "${f}" "${targetdir}"/${f##*/} || return 1
-				rm -f "${targetdir}"/${f##*/}*'~' >/dev/null 2>&1
+				rm -f "${targetdir%/}"/${f##*/}*'~' >/dev/null 2>&1
+				mv -f --backup=numbered --suffix='~' "${f}" "${targetdir%/}"/${f##*/} || return 1
+				rm -f "${targetdir%/}"/${f##*/}*'~' >/dev/null 2>&1
 			done
 			rmdir "${sourcedir}"
 		}
@@ -549,9 +556,9 @@
 				# getting a subdir for your 64-bits targets which breaks
 				# things badly...  Need to solve it when we go mainstream...
 				#libdir="lib/"$("${ROOT}/${GCC_PATH}"/gcc ${multiarg} -print-multi-os-directory)
-				libdir="lib/${multilibdir}"
+				libdir="lib/${multilibdir#/}"
 
-				pushd "${ROOT%/}${LDPATH}/${multilibdir}" > /dev/null || return 1
+				pushd "${ROOT%/}${LDPATH%/}/${multilibdir#/}" > /dev/null || return 1
 
 				local donelibs=
 				for lib in lib*.${LIBSUFFIX}; do
@@ -563,7 +570,7 @@
 					donelibs="${donelibs} ${gcclib} "
 					if [[ ${gcclib} == gcc_s* || ${gcclib} == unwind* ]]; then
 
-						targetdir="${EPREFIX}/${libdir}"
+						targetdir="${EPREFIX}/${libdir#/}"
 
 						# finish lib/lib* at first, as the others may depend on it, and newer
 						# libs normally are compatible to older ones with same soname.
@@ -571,25 +578,25 @@
 							targetdirs=":${targetdir},:${targetdirs}"
 
 						do_single_runtime \
-							"${ROOT%/}${LDPATH}/${multilibdir}" \
+							"${ROOT%/}${LDPATH%/}/${multilibdir#/}" \
 							${gcclib} \
-							"${ROOT%/}${targetdir}"/${temporary} \
+							"${ROOT%/}${targetdir%/}"/${temporary#/} \
 							"${targetdir}" \
 						|| return 1
 
 						continue
 					fi
 
-					targetdir="${EPREFIX}/usr/${REAL_CHOST}/lib/gcc/${multilibdir}"
+					targetdir="${EPREFIX}/usr/${REAL_CHOST}/lib/gcc/${multilibdir#/}"
 
 					# finish usr/<chost>/lib/gcc/lib* after lib/lib*
 					[[ ${targetdirs} == *":${targetdir},clean:"* ]] ||
 						targetdirs="${targetdirs}:${targetdir},clean:"
 
 					do_single_runtime \
-						"${ROOT%/}${LDPATH}/${multilibdir}" \
+						"${ROOT%/}${LDPATH}/${multilibdir#/}" \
 						${gcclib} \
-						"${ROOT%/}${targetdir}"/${temporary} \
+						"${ROOT%/}${targetdir}"/${temporary#/} \
 						"${targetdir}" \
 					|| return 1
 
@@ -612,8 +619,8 @@
 			targetdir=${targetdir%,*}
 
 			finish_runtime_dir \
-				"${ROOT%/}${targetdir}"/${temporary} \
-				"${ROOT%/}${targetdir}" \
+				"${ROOT%/}${targetdir}"/${temporary#/} \
+				"${ROOT%/}${targetdir#/}" \
 				${clean} \
 			|| return 1
 		done
@@ -634,7 +641,7 @@
 			ewarn "env-update failed to work properly; making sure ld.so.conf paths"
 			ewarn "are setup properly.  Please rerun gcc-config with the -f option."
 			echo ""
-			grep -h ^LDPATH= "${EROOT}"/etc/env.d/05gcc-${CTARGET} \
+			grep -h ^LDPATH= "${EROOT}"etc/env.d/05gcc-${CTARGET} \
 				| sed -e 's:^LDPATH=::' -e 's:"::g' -e 's|:|\n|g' \
 				>> "${EPREFIX}"/etc/ld.so.conf
 			ldconfig
@@ -658,9 +665,9 @@
 }
 
 get_current_profile() {
-	local conf="${GCC_ENV_D}/config"
+	local conf="${GCC_ENV_D%/}/config"
 	if [[ ! -f ${conf} ]] ; then
-		conf="${GCC_ENV_D}/config-${CTARGET}"
+		conf="${GCC_ENV_D%/}/config-${CTARGET}"
 	elif [[ -n ${CC_COMP} ]] && is_cross_compiler ; then
 		conf="${conf}-${CC_COMP}"
 	fi
@@ -675,7 +682,7 @@
 	if [[ -z ${CURRENT} ]] ; then
 		eerror "${argv0}: No gcc profile is active!"
 		return 1
-	elif [[ ! -f ${GCC_ENV_D}/${CURRENT} ]] ; then
+	elif [[ ! -f ${GCC_ENV_D%/}/${CURRENT} ]] ; then
 		eerror "${argv0}: Active gcc profile is invalid!"
 		return 1
 	fi
@@ -693,19 +700,19 @@
 		echo "Using gcc-config info in ${ROOT}"
 	fi
 
-	if [[ ! -f ${GCC_ENV_D}/config-${CTARGET} ]] ; then
-		if ! is_cross_compiler && [[ -e ${GCC_ENV_D}/config ]] ; then
-			[[ -w ${GCC_ENV_D}/config ]] && mv ${GCC_ENV_D}/config ${GCC_ENV_D}/config-${CTARGET}
+	if [[ ! -f ${GCC_ENV_D%/}/config-${CTARGET} ]] ; then
+		if ! is_cross_compiler && [[ -e ${GCC_ENV_D%/}/config ]] ; then
+			[[ -w ${GCC_ENV_D%/}/config ]] && mv ${GCC_ENV_D%/}/config ${GCC_ENV_D%/}/config-${CTARGET}
 		else
 			eerror "${argv0}: No gcc profile is active; please select one!"
 			filter=${CTARGET}
 		fi
 	fi
 
-	eval $(grep -s ^CURRENT= "${GCC_ENV_D}"/config-${CTARGET})
+	eval $(grep -s ^CURRENT= "${GCC_ENV_D%/}"/config-${CTARGET})
 	CURRENT_NATIVE=${CURRENT}
 	local target=
-	for x in "${GCC_ENV_D}"/* ; do
+	for x in "${GCC_ENV_D%/}"/* ; do
 		if [[ -f ${x} ]] && [[ ${x/\/config} == ${x} ]] ; then
 			CTARGET=$(unset CTARGET; source "${x}"; echo ${CTARGET})
 
@@ -722,8 +729,8 @@
 			x=${x##*/}
 			if [[ ${x} == ${CURRENT_NATIVE} ]] ; then
 				x="${x} ${GOOD}*${NORMAL}"
-			elif [[ -e ${GCC_ENV_D}/config-${target} ]] ; then
-				source "${GCC_ENV_D}/config-${target}"
+			elif [[ -e ${GCC_ENV_D%/}/config-${target} ]] ; then
+				source "${GCC_ENV_D%/}/config-${target}"
 				[[ ${x} == ${CURRENT} ]] && x="${x} ${HILITE}*${NORMAL}"
 			fi
 			echo " [${i}] ${x}"
@@ -736,7 +743,7 @@
 	local ENV_CMD=
 	local SET_ELEMENT=
 
-	GCC_PATH=$(source "${GCC_ENV_D}/${CC_COMP}"; echo ${GCC_PATH:-${PATH}})
+	GCC_PATH=$(source "${GCC_ENV_D%/}/${CC_COMP}"; echo ${GCC_PATH:-${PATH}})
 
 	case ${SHELL} in
 		*/csh|*/tcsh)
@@ -758,30 +765,30 @@
 }
 
 get_bin_path() {
-	if [[ -e ${GCC_ENV_D}/${CC_COMP} ]] ; then
+	if [[ -e ${GCC_ENV_D%/}/${CC_COMP} ]] ; then
 		(
 			unset PATH GCC_PATH
-			source "${GCC_ENV_D}/${CC_COMP}"
+			source "${GCC_ENV_D%/}/${CC_COMP}"
 			echo "${GCC_PATH:-${PATH}}"
 		)
 	else
 		echo "no-config"
-		echo "${GCC_ENV_D}/${CC_COMP} doesnt exist" 1>&2
+		echo "${GCC_ENV_D%/}/${CC_COMP} doesnt exist" 1>&2
 	fi
 
 	return 0
 }
 
 get_lib_path() {
-	if [[ -e ${GCC_ENV_D}/${CC_COMP} ]] ; then
+	if [[ -e ${GCC_ENV_D%/}/${CC_COMP#/} ]] ; then
 		(
 			unset LDPATH
-			source "${GCC_ENV_D}/${CC_COMP}"
+			source "${GCC_ENV_D%/}/${CC_COMP#/}"
 			echo "${LDPATH}"
 		)
 	else
 		echo "no-config"
-		echo "${GCC_ENV_D}/${CC_COMP} doesnt exist" 1>&2
+		echo "${GCC_ENV_D%/}/${CC_COMP#/} doesnt exist" 1>&2
 	fi
 
 	return 0
@@ -789,15 +796,15 @@
 
 get_stdcxx_incdir() {
 	# XXX: we should prob scrub this ...
-	if [[ -e ${GCC_ENV_D}/${CC_COMP} ]] ; then
+	if [[ -e ${GCC_ENV_D%/}/${CC_COMP#/} ]] ; then
 		(
 			unset LDPATH STDCXX_INCDIR
-			source "${GCC_ENV_D}/${CC_COMP}"
-			echo "${LDPATH}/include/${STDCXX_INCDIR}"
+			source "${GCC_ENV_D%/}/${CC_COMP#/}"
+			echo "${LDPATH%/}/include/${STDCXX_INCDIR#/}"
 		)
 	else
 		echo "no-config"
-		echo "${GCC_ENV_D}/${CC_COMP} doesnt exist" 1>&2
+		echo "${GCC_ENV_D%/}/${CC_COMP#/} doesnt exist" 1>&2
 	fi
 
 	return 0
@@ -870,11 +877,12 @@
 
 CC_COMP=
 [[ -z ${ROOT} ]] && ROOT="/"
-[[ ${ROOT:0-1} != "/" ]] && ROOT="${ROOT}/"
+[[ ${ROOT:0-1} != "/" ]] && ROOT="${ROOT%/}/"
 EPREFIX="@GENTOO_PORTAGE_EPREFIX@"
+EPREFIX="${EPREFIX%/}"
 EROOT="${ROOT%/}${EPREFIX}/"
 ENV_D="${EROOT}etc/env.d"
-GCC_ENV_D="${ENV_D}/gcc"
+GCC_ENV_D="${ENV_D%/}/gcc"
 
 for x in "$@" ; do
 	case "${x}" in
@@ -983,15 +991,15 @@
 				else
 					# User gave us a full HOST-gccver
 					x=${x##*/}
-					if [[ ${DOIT} == "get_current_profile" && -z $(ls "${GCC_ENV_D}"/${x}-* 2>/dev/null) ]] || \
-					   [[ ${DOIT} != "get_current_profile" && ! -f ${GCC_ENV_D}/${x} ]]
+					if [[ ${DOIT} == "get_current_profile" && -z $(ls "${GCC_ENV_D%/}"/${x#/}-* 2>/dev/null) ]] || \
+					   [[ ${DOIT} != "get_current_profile" && ! -f ${GCC_ENV_D%/}/${x#/} ]]
 					then
 						# Maybe they just gave us a gccver ...
 						get_real_chost
-						if [[ -f ${GCC_ENV_D}/${REAL_CHOST}-${x} ]] ; then
+						if [[ -f ${GCC_ENV_D%/}/${REAL_CHOST}-${x} ]] ; then
 							x=${REAL_CHOST}-${x}
 						else
-							eerror "${argv0}: Could not locate '$x' in '${GCC_ENV_D}/' !"
+							eerror "${argv0}: Could not locate '$x' in '${GCC_ENV_D%/}/' !"
 							exit 1
 						fi
 					fi
@@ -1027,7 +1035,7 @@
 
 if [[ ${DOIT} != "get_current_profile" ]] ; then
 	GCC_LIB=$(
-		LDPATH=$(source "${GCC_ENV_D}/${CC_COMP}"; echo ${LDPATH})
+		LDPATH=$(source "${GCC_ENV_D%/}/${CC_COMP#/}"; echo ${LDPATH})
 		echo ${LDPATH} | \
  			sed -e "s|${EPREFIX}/*|/|g" | \
 			awk -F/ '{ print "/"$2"/"$3"/"$4"/" }'
@@ -1036,14 +1044,20 @@
 	CC_COMP_VERSION=$(chop_gcc_ver_spec ${CC_COMP})
 	CC_COMP_TARGET=${CC_COMP%-${CC_COMP_VERSION}*}
 
-	if [[ ! -d ${EROOT}/${GCC_LIB}/${CC_COMP_TARGET}/${CC_COMP_VERSION} ]]; then
+	gcc_lib="${GCC_LIB#/}"
+	gcc_lib="${gcc_lib%/}"
+    cc_comp_target="${CC_COMP_TARGET%/}"
+	cc_comp_target="${cc_comp_target#/}"
+	cc_comp_version="${CC_COMP_VERSION%/}"
+	if [[ ! -d ${EROOT}${gcc_lib}/${cc_comp_target}/${cc_comp_version} ]]; then
 		CC_COMP_VERSION=${CC_COMP_VERSION%-*}
+		cc_comp_version=${CC_COMP_VERSION%/}
 	fi
 
-	if [[ ! -d ${EROOT}/${GCC_LIB}/${CC_COMP_TARGET}/${CC_COMP_VERSION} ]] || \
-	   [[ ! -f ${GCC_ENV_D}/${CC_COMP} ]]
+	if [[ ! -d ${EROOT}${gcc_lib}/${cc_comp_target}/${cc_comp_version} ]] || \
+	   [[ ! -f ${GCC_ENV_D%/}/${CC_COMP} ]]
 	then
-		eerror "${argv0}: Profile does not exist or invalid setting for ${GCC_ENV_D}/${CC_COMP}" 1>&2
+		eerror "${argv0}: Profile does not exist or invalid setting for ${GCC_ENV_D%/}/${CC_COMP}" 1>&2
 		#exit 1
 	fi
 fi
<-----8<-----
----[ "sys-devel/gcc-config/files/gcc-config-1.5" ]----->8----->
--- PORTAGE/sys-devel/gcc-config/files/gcc-config-1.5
+++ OVERLAY/sys-devel/gcc-config/files/gcc-config-1.5
@@ -9,8 +9,12 @@
 
 : ${ROOT:=/}
 [[ ${ROOT} != */ ]] && ROOT="${ROOT}/"
-[[ ${ROOT} != /* ]] && ROOT="${PWD}${ROOT}"
+[[ ${ROOT} != /* ]] && ROOT="${PWD}/${ROOT}"
 EPREFIX="@GENTOO_PORTAGE_EPREFIX@"
+
+# really shouldn't be so, but just in case
+EPREFIX="${EPREFIX%/}"
+
 EROOT="${ROOT%/}${EPREFIX}/"
 
 cd /
@@ -65,6 +69,9 @@
                              profile are located.
   -L, --get-lib-path         Print path where libraries of the given/current
                              profile are located.
+  -q, --quiet-cygdll-warning Do not dump a warning message if cygdll
+                             protections are applied (i.e.: use in ebuilds
+							 to avoid redundant warnings).
 
 Profile names are of the form:  <CHOST>-<gcc version>
 For example:                    i686-pc-linux-gnu-3.2.1
@@ -91,9 +98,9 @@
 	#
 
 	local varname=${1:-CHOST}
-	local conf=${EROOT}/etc/portage/make.conf
-	if [[ ! -e ${conf} && -e ${EROOT}/etc/make.conf ]] ; then
-		conf=${EROOT}/etc/make.conf
+	local conf=${EROOT}etc/portage/make.conf
+	if [[ ! -e ${conf} && -e ${EROOT}etc/make.conf ]] ; then
+		conf=${EROOT}etc/make.conf
 	fi
 	local ret=$(source "${conf}" 2>/dev/null ; echo ${!varname})
 	if [[ -z ${ret} ]] ; then
@@ -116,8 +123,8 @@
 	#
 	# Then we try /etc/env.d/gcc/config-${CTARGET}
 	#
-	if [[ -s ${EROOT}/etc/env.d/gcc/config-${CTARGET} ]] ; then
-		ret=$(split_gcc_ver $(show_var CURRENT "${EROOT}"/etc/env.d/gcc/config-${CTARGET}))
+	if [[ -s ${EROOT}etc/env.d/gcc/config-${CTARGET} ]] ; then
+		ret=$(split_gcc_ver $(show_var CURRENT "${EROOT}"etc/env.d/gcc/config-${CTARGET}))
 		echo ${ret% *}
 	fi
 }
@@ -133,7 +140,31 @@
 
 	# make sure portage isnt broken
 	if python -V &>/dev/null ; then
-		export REAL_CHOST=$(env -i EPREFIX="${EPREFIX}" "$(PATH="${EPREFIX}/usr/bin:${PATH}" type -P portageq)" envvar CHOST 2>/dev/null)
+		local myportageq=$( PATH="${EPREFIX}/usr/bin:/usr/bin:${PATH}" type -P portageq )
+		local myuname=$( PATH="${EPREFIX}/usr/bin:/usr/bin:${PATH}" type -P uname )
+		case x"$( "${myuname}" -o )" in
+			xCygwin*)
+			    # on Cygwin we simply cannot function without cygwin1.dll somewhere in
+				# our path.  For the forseeable future, we will take cygwin1.dll from
+				# upstream, so we at least need "/bin" in the PATH, which is where it's
+				# 'supposed' to be.  If you put it somewhere else, I guess you'd better change
+				# this script!  (Actually since multiple cygwin1.dll's aren't supported,
+				# a better solution would be to parse cygcheck output (i.e.:
+				# something like cygcheck @EPREFIX@/bin/bash.exe), and, after translating to
+				# UNIX-style paths, use PATH=<that cygwin1.dll's path> below...
+				# plus for /true/ equivalence to what this accomplishes on linux, we would
+				# also need to set PATH s.t. the entire .dll-dependency-tree of bash, env,
+				# and ${myportageq} were also found.  This could get very difficult!  So for
+				# now we assume that a basic $EPREFIX/{usr/,}bin:/bin will work.  yuck.)
+				export REAL_CHOST=$( env -i EPREFIX="${EPREFIX}" \
+											PATH="${EPREFIX}/bin:${EPREFIX}/usr/bin:/bin" \
+									 "${myportageq}" envvar CHOST 2>/dev/null )
+				;;
+			*)
+				export REAL_CHOST=$( env -i EPREFIX="${EPREFIX}" \
+									 "${myportageq}" envvar CHOST 2>/dev/null )
+				;;
+		esac
 	else
 		ewarn "Python seems to be broken, attempting to locate CHOST ourselves ..."
 		export REAL_CHOST=$(try_real_hard_to_find_CHOST)
@@ -142,7 +173,7 @@
 	if [[ -z ${REAL_CHOST} ]] ; then
 		eerror "${argv0}: Could not get portage CHOST!"
 		eerror "${argv0}: You should verify that CHOST is set in one of these places:"
-		eerror "${argv0}:  - ${EROOT}/etc/portage/make.conf"
+		eerror "${argv0}:  - ${EROOT}etc/portage/make.conf"
 		eerror "${argv0}:  - active environment"
 		exit 1
 	fi
@@ -153,6 +184,28 @@
 	[[ ${CC_COMP/${REAL_CHOST}} == ${CC_COMP} ]]
 }
 
+portage_supports_cygdll_protect() {
+    case x${__portage_supports_cygdll_protect} in
+		xyes)
+			return 0
+			;;
+		xno)
+			return 1
+			;;
+		x)
+			__portage_supports_cygdll_protect=no
+			# Note that in case python is broken this will correctly give a negative answer
+		    CYGDLL_PROTECT="/foo" portageq is_cygdll_protected "${EROOT}" "${EPREFIX}"/foo 2>&1 >/dev/null && \
+				__portage_supports_cygdll_protect=yes
+			[[ ${__portage_supports_cygdll_protect} == yes ]] && return 0
+			return 1
+			;;
+		*)
+			die
+			;;
+	esac
+}
+
 convert_profile_paths() {
 	# Older gcc's used PATH= and ROOTPATH= in the env.d files.
 	# Newer one's only use GCC_PATH=.  Convert old to new here.
@@ -196,9 +249,9 @@
 		[[ ${x} != ${CTARGET}-* ]] && is_cross_compiler && continue
 
 		# Make sure we have no stale wrappers
-		rm -f "${EROOT}/usr/bin/${x}"
+		rm -f "${EROOT}usr/bin/${x}"
 		[[ ${x:${#x}-3} == "gcc" || ${x:${#x}-3} == "g++" ]] \
-			&& rm -f "${EROOT}/usr/bin/${x}"{32,64}
+			&& rm -f "${EROOT}usr/bin/${x}"{32,64}
 
 		# Only install a wrapper if the binary exists ...
 		# We want to figure out the 'reference file' for each
@@ -211,19 +264,19 @@
 			f77) ref=g77;;
 			*)   ref=${x};;
 		esac
-		ref="${ROOT}/${GCC_PATH}/${ref}"
+		ref="${ROOT%/}${GCC_PATH}/${ref}"
 		if [[ -x ${ref} ]] ; then
-			cp -f "${wrapper}" "${EROOT}/usr/bin/${x}"
-			touch -r "${ref}" "${EROOT}/usr/bin/${x}"
+			cp -f "${wrapper}" "${EROOT}usr/bin/${x}"
+			touch -r "${ref}" "${EROOT}usr/bin/${x}"
 		fi
 	done
 	# legacy cruft, make sure we dont leave it laying around #143205
-	rm -f "${EROOT}/usr/bin/${CTARGET}-cc"
+	rm -f "${EROOT}usr/bin/${CTARGET}-cc"
 
 	# install the canonical cpp wrapper
 	if ! is_cross_compiler ; then
-		cp -f "${wrapper}" "${EROOT}/lib/cpp"
-		touch -r "${EROOT}/usr/bin/${CTARGET}-cpp" "${EROOT}/lib/cpp"
+		cp -f "${wrapper}" "${EROOT}lib/cpp"
+		touch -r "${EROOT}usr/bin/${CTARGET}-cpp" "${EROOT}lib/cpp"
 	fi
 }
 
@@ -242,6 +295,7 @@
 	local GCC_PROFILES=
 	local OLD_CC_COMP=
 	local GCC_PATH=
+	local cygdll_protections=no
 
 	[[ $(id -u) != $(python -c 'import portage.const as c; print c.rootuid;') ]] && die_eerror "Must be root"
 
@@ -288,8 +342,8 @@
 		# Pass all by default
 		awk '!/^(STDCXX_INCDIR|LDPATH|CC|CXX|CTARGET|GCCBITS|GCC_SPECS|GCC_PATH)=/ {print $0}' \
 			"${GCC_ENV_D}/${CC_COMP}" >> "${envd}.tmp"
-		if [[ -z ${EPREFIX} && -d ${ROOT}/etc/ld.so.conf.d ]] ; then
-			echo "${MY_LDPATH}" > "${ROOT}"/etc/ld.so.conf.d/05gcc-${CTARGET}.conf
+		if [[ -z ${EPREFIX} && -d ${ROOT}etc/ld.so.conf.d ]] ; then
+			echo "${MY_LDPATH}" > "${ROOT}"etc/ld.so.conf.d/05gcc-${CTARGET}.conf
 		else
 			echo "LDPATH=\"${MY_LDPATH}\"" >> "${envd}.tmp"
 		fi
@@ -305,10 +359,10 @@
 
 
 		# Relocate random crap
-		if [[ -e ${EROOT}/usr/${GENTOO_LIBDIR}/pkgconfig/libgcj-${CC_COMP_VERSION}.pc ]] ; then
+		if [[ -e ${EROOT}usr/${GENTOO_LIBDIR}/pkgconfig/libgcj-${CC_COMP_VERSION}.pc ]] ; then
 			local mver=${CC_COMP_VERSION:0:3}
 			for x in "" "-${mver}" ; do
-				x="${EROOT}/usr/lib/pkgconfig/libgcj${x}.pc"
+				x="${EROOT}usr/lib/pkgconfig/libgcj${x}.pc"
 				rm -f "${x}"
 				ln -s libgcj-${CC_COMP_VERSION}.pc "${x}"
 			done
@@ -338,14 +392,44 @@
 		# selected version.
 		GCC_PROFILES=$(LC_ALL="C" ls ${GCC_ENV_D}/${REAL_CHOST}-*)
 
-		local dstlibgcc=${EROOT}/usr/${REAL_CHOST}/lib/gcc
-		local dstlib=${EROOT}/lib
+		local dstlibgcc=${EROOT}usr/${REAL_CHOST}/lib/gcc
+		local dstlib=${EROOT}lib
+
+		local dlltool=/bin/false
+		if [[ ${REAL_CHOST} == *-cygwin* ]] ; then
+			if [[ -x ${EPREFIX}/usr/${REAL_CHOST}/bin/dlltool ]] ; then
+				dlltool=${EPREFIX}/usr/${REAL_CHOST}/bin/dlltool
+			elif [[ -x ${EPREFIX}/usr/bin/dlltool ]] ; then
+				dlltool=${EPREFIX}/usr/bin/dlltool
+			elif [[ -x $(which dlltool 2>/dev/null) ]] ; then
+				dlltool=$(which dlltool 2>/dev/null)
+			else 
+				# otherwise, not much we can do about it, /bin/false will have to do
+				echo "WARNING: Cannot find dlltool on cygwin platform: .dll files will not be copied." >&2
+			fi
+		fi
 
 		# Prepare empty directories first
 		local temporary=.gcc.config.new
 		rm -rf   "${dstlib}"/${temporary} "${dstlibgcc}"/${temporary} || return 1
 		mkdir -p "${dstlib}"/${temporary} "${dstlibgcc}"/${temporary} || return 1
 
+		# these dummy names are just insurance against accidentally tacking "${EROOT}" or something
+		# onto them and running amok.  Obviously that shouldn't happen anyhow.
+		local dstcygwindll=/dev/null/foobarbazquux
+		local dstcygwindllgcc=/dev/null/foobarbazquux
+		if [[ -x ${dlltool} && ${dlltool} != /bin/false ]] ; then
+			dstcygwindll=${EROOT}bin
+			# hmm, usr/${REAL_CHOST}/bin better?  Uncharted territory I guess but it makes sense
+			# that someone should be able to set PATH=${EPREFIX}/bin:${EPREFIX}/usr/bin:/bin:/usr/bin
+			# and get things to work (indeed that's exactly what bootstrap recipe calls for)
+			# otherwise, I think it's too likely that we are actually getting base-system dlls at runtime
+			# cross compilers are another story but this code only runs for native toolchain anyhow.
+			dstcygwindllgcc=${EROOT}usr/bin
+			rm -rf "${dstcygwindll}"/${temporary} "${dstcygwindllgcc}"/${temporary} || return 1
+			mkdir -p "${dstcygwindll}"/${temporary} "${dstcygwindllgcc}"/${temporary} || return 1
+		fi
+
 		dumpargs() {
 			return 0
 			local x
@@ -413,6 +497,122 @@
 				|| return 1
 			}
 			;;
+		*-cygwin*)
+			LIBSUFFIX="dll.a"
+			do_single_runtime() {
+				dumpargs do_single_runtime "$@"
+				local sourcedir=$1; shift
+				local libname=$1; shift
+				local targetdir=$1; shift
+				local finaldir=$1; shift
+
+				do_single_runtime_elf \
+					"${sourcedir}" \
+					"${libname}" \
+					"${targetdir}" \
+					"${finaldir}" \
+				|| return 1
+
+				# on cygwin these are always libfoo.dll.a -- no version numbers appear.
+				# one could think of them as more nearly akin to .pc or .la files.
+				if [[ -n $(ls "${sourcedir}"/lib${libname}.${LIBSUFFIX} 2>/dev/null) ]] ; then
+					if [[ -x ${dlltool} && ${dlltool} != /bin/false ]] ; then
+						local cygdllname
+						cygdllname="$( echo $(
+							${dlltool} -I "${sourcedir}"/lib${libname}.${LIBSUFFIX} 2>/dev/null || \
+								echo xxxFAILFAILFAILxxx
+						) )"
+						if [[ -n "${cygdllname}" && ${cygdllname} != *xxxFAILFAILFAILxxx* ]] ; then
+							# we suspect that the .dll in question will be here:
+							cygdllname="${GCC_PATH}/${cygdllname}"
+							if [[ ! -x ${cygdllname} ]] ; then
+								echo "WARNING: expected \"${cygdllname}\" to exist but is not there." >&2
+							else
+								# attempt to map the targetdir to a corresponding dstcygwindll -- if
+								# not an /exact/ match then we skip it -- note that nothing is being
+								# done here to prevent us from scribbling over portage's files, but
+								# we're feeling lucky, apparently (non-cygwin gcc-config has same issue).
+								case ${finaldir} in
+									${dstlib}/.)
+									    [[ ${targetdirs} == *":${dstcygwindll},:"* ]] ||
+											targetdirs=":${dstcygwindll},:${targetdirs}"
+										cp -fpP "${cygdllname}" "${dstcygwindll}"/${temporary} || return 1
+										;;
+									${dstlibgcc}/.)
+										[[ ${targetdirs} == *":${dstcygwindllgcc},:"* ]] ||
+											targetdirs="${targetdirs}:${dstcygwindllgcc},:"
+										cp -fpP "${cygdllname}" "${dstcygwindllgcc}"/${temporary} || return 1
+										;;
+									*)
+										echo "WARNING: no .dll target mapping for \"${targetdir}\". Skipping." >&2
+										;;
+								esac
+							fi
+						else
+							echo "WARNING: unable to determine .dll name from ${sourcedir}/lib${libname}.${LIBSUFFIX}" >&2
+						fi
+					fi # user was already warned about missing dlltool, not need to repeat ourselves.
+				else
+					# on most platforms this is harmless but on cygwin it's almost certainly an error:
+					echo "WARNING: expected ${sourcedir}/lib${libname}.${LIBSUFFIX} to exist but it does not." >&2
+				fi
+			}
+			finish_runtime_dir() {
+				dumpargs finish_runtime_dir_elf "$@"
+				local sourcedir="$1"
+				local targetdir="$2"
+				local cleanup="$3"
+
+				# if there is no cygdll_protect support, just use the standard
+				# finish_runtime_dir_elf implementation.
+				portage_supports_cygdll_protect || {
+					finish_runtime_dir_elf "$@"
+					return $?
+				}
+
+				# Here we want to implement any cygdll protections behind
+				# finish_runtime_dir_elf's back.  However, if we allow it to clean, it's going
+				# to remove any _cygdll_protect_ files and fail to respect cygdll_protect.
+				# so we implement cleaning here and tell finish_runtime_dir_elf that no cleaning
+				# is required.  We also have to remove any files that we cygdll_protect from
+				# source, otherwise finish_runtime_dir_elf would deploy them anyway.
+				if [[ ${cleanup} == clean ]]; then
+					if [[ ${targetdir} == *${EPREFIX}/lib ]]; then
+						echo "WARNING: not cleaning ${targetdir}" >&2
+					else
+						for f in "${targetdir}"/*; do
+							[[ ${f} == ${sourcedir} ]] && continue
+							# even if they are cruft of some kind, seems wrong to remove these.
+							[[ ${f##*/} == _cygdll_protect_* ]] && continue
+							[[ -e "${sourcedir}/${f##*/}" ]] && continue
+							if portageq is_cygdll_protected "${EROOT}" "${f}" ; then
+								if [[ ${cygdll_protections} == no ]] ; then
+									portageq master_lock_acquire --as-portage
+									cygdll_protections=yes
+								fi
+								portageq cygdll_install_protected_file "${EROOT}" /dev/null "${f}"
+							else
+								rm -f "${f}"
+							fi
+						done
+					fi
+				fi
+				for f in ${sourcedir}/* ; do
+					[[ -f "${f}" ]] || continue
+					targetfile="${targetdir}"/${f##*/}
+					if portageq is_cygdll_protected "${EROOT}" "${targetfile}" ; then
+						if [[ ${cygdll_protections} == no ]] ; then
+							portageq master_lock_acquire --as-portage
+							cygdll_protections=yes
+						fi
+						portageq cygdll_install_protected_file "${EROOT}" "${f}" "${targetfile}"
+						rm -f "${f}"
+					fi
+				done
+
+				finish_runtime_dir_elf "$1" "$2" noclean
+			}
+			;;
 		*-darwin*)
 			LIBSUFFIX="dylib"
 
@@ -564,7 +764,7 @@
 			for multilib in $(
 				# ensure we always operate on base libdir first
 				[[ -n ${EPREFIX} ]] && echo ".;@X" ;
-				"${ROOT}/${GCC_PATH}"/gcc -print-multi-lib
+				"${ROOT}${GCC_PATH#/}"/gcc -print-multi-lib
 			); do
 
 			multiarg=${multilib#*;}
@@ -576,7 +776,7 @@
 			if [[ ${multilib} == ".;@X" ]] ; then
 				libdir="lib/${multilibdir}"
 			else
-				libdir="lib/"$("${ROOT}/${GCC_PATH}"/gcc ${multiarg} -print-multi-os-directory)
+				libdir="lib/"$("${ROOT}${GCC_PATH}"/gcc ${multiarg} -print-multi-os-directory)
 			fi
 
 			pushd "${ROOT%/}${LDPATH}/${multilibdir}" > /dev/null || return 1
@@ -676,7 +876,7 @@
 			ewarn "are setup properly.  Please rerun gcc-config with the -f option."
 			echo ""
 			if [[ -z ${EPREFIX} && ! -d /etc/ld.so.conf.d ]] ; then
-				show_var LDPATH "${ROOT}"/etc/env.d/05gcc-${CTARGET} \
+				show_var LDPATH "${ROOT}"etc/env.d/05gcc-${CTARGET} \
 					| sed -e 's|:|\n|g' >> /etc/ld.so.conf
 			fi
 			ldconfig
@@ -698,6 +898,20 @@
 		echo
 	fi
 
+	# If any cygdll_protections were put in-limbo then we release the master lock
+	# and have portageq warn the user if any updates are pending (they may not be,
+	# if, for example, a file with a pending in-limbo update was reverted).
+	# Note that, if, for any reason, this script died while holding the master lock,
+	# the PID would be left in the database; however, this only presents a problem if
+	# the database were shared across multiple hosts -- otherwise, the lock would be
+	# automatically cleaned as soon as the next time the master lock was accessed.
+	# TODO: It would be better if a trap were implemented to prevent this nevertheless.
+	if [[ ${cygdll_protections} == yes ]] ; then
+		portageq master_lock_release --as-portage
+		[[ ${QUIET_CYGDLL_WARNING} == no ]] && \
+			portageq cygdll_show_in_limbo_updates "${EROOT}"
+	fi
+
 	return 0
 }
 
@@ -874,6 +1088,7 @@
 CC_COMP=
 ENV_D="${EROOT}etc/env.d"
 GCC_ENV_D="${ENV_D}/gcc"
+QUIET_CYGDLL_WARNING=no
 
 for x in "$@" ; do
 	case "${x}" in
@@ -932,6 +1147,9 @@
 				DOIT="get_lib_path"
 			fi
 			;;
+		-q|--quiet-cygdll-warning)
+			QUIET_CYGDLL_WARNING=yes
+			;;
 		-x|--debug)
 			SET_X=true
 			;;
@@ -1028,11 +1246,11 @@
 	CC_COMP_VERSION=$(chop_gcc_ver_spec ${CC_COMP})
 	CC_COMP_TARGET=${CC_COMP%-${CC_COMP_VERSION}*}
 
-	if [[ ! -d ${EROOT}/${GCC_LIB}/${CC_COMP_TARGET}/${CC_COMP_VERSION} ]]; then
+	if [[ ! -d ${EROOT}${GCC_LIB}/${CC_COMP_TARGET}/${CC_COMP_VERSION} ]]; then
 		CC_COMP_VERSION=${CC_COMP_VERSION%-*}
 	fi
 
-	if [[ ! -d ${EROOT}/${GCC_LIB}/${CC_COMP_TARGET}/${CC_COMP_VERSION} ]] || \
+	if [[ ! -d ${EROOT}${GCC_LIB}/${CC_COMP_TARGET}/${CC_COMP_VERSION} ]] || \
 	   [[ ! -f ${GCC_ENV_D}/${CC_COMP} ]]
 	then
 		eerror "${argv0}: Profile does not exist or invalid setting for ${GCC_ENV_D}/${CC_COMP}" 1>&2
<-----8<-----

*** The following files appear only in the overlay ***
overlay/sys-devel/gcc-config/gcc-config-1.4.1-r00.2.ebuild: ASCII text

*** The following files appear only in portage ***
usr/portage/sys-devel/gcc-config/gcc-config-1.4.1-r1.ebuild: ASCII text
usr/portage/sys-devel/gcc-config/gcc-config-1.7.1.ebuild: ASCII text

