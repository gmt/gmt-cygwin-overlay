diff -urN gcc-4.5.3.orig/libstdc++-v3/config/os/mingw32/os_defines.h gcc-4.5.3/libstdc++-v3/config/os/mingw32/os_defines.h
--- gcc-4.5.3.orig/libstdc++-v3/config/os/mingw32/os_defines.h	2009-11-30 15:22:04.000000000 -0800
+++ gcc-4.5.3/libstdc++-v3/config/os/mingw32/os_defines.h	2012-09-23 13:04:58.495582600 -0700
@@ -60,4 +60,10 @@
 // See  libstdc++/37522.
 #define _GLIBCXX_HAVE_BROKEN_VSWPRINTF 1
 
+#ifdef _DLL
+#define _GLIBCXX_IMPORT __attribute__((dllimport))
+#else
+#define _GLIBCXX_IMPORT
+#endif
+
 #endif
diff -urN gcc-4.5.3.orig/libstdc++-v3/config/os/newlib/os_defines.h gcc-4.5.3/libstdc++-v3/config/os/newlib/os_defines.h
--- gcc-4.5.3.orig/libstdc++-v3/config/os/newlib/os_defines.h	2009-11-30 15:22:04.000000000 -0800
+++ gcc-4.5.3/libstdc++-v3/config/os/newlib/os_defines.h	2012-09-23 13:04:58.498582900 -0700
@@ -35,6 +35,8 @@
 
 #ifdef __CYGWIN__
 #define _GLIBCXX_GTHREAD_USE_WEAK 0
+#define __GXX_MERGED_TYPEINFO_NAMES 0
+#define __GXX_TYPEINFO_EQUALITY_INLINE 0
 
 #if defined (_GLIBCXX_DLL)
 #define _GLIBCXX_PSEUDO_VISIBILITY_default __attribute__ ((__dllimport__))
@@ -47,6 +49,13 @@
 
 // See libstdc++/20806.
 #define _GLIBCXX_HAVE_DOS_BASED_FILESYSTEM 1
+
+#ifdef _DLL
+#define _GLIBCXX_IMPORT __attribute__((dllimport))
+#else
+#define _GLIBCXX_IMPORT
+#endif
+
 #endif
 
 #endif
diff -urN gcc-4.5.3.orig/libstdc++-v3/configure.host gcc-4.5.3/libstdc++-v3/configure.host
--- gcc-4.5.3.orig/libstdc++-v3/configure.host	2010-12-03 04:46:12.000000000 -0800
+++ gcc-4.5.3/libstdc++-v3/configure.host	2012-09-23 13:04:58.500583100 -0700
@@ -209,6 +209,7 @@
     ;;
   cygwin*)
     os_include_dir="os/newlib"
+    OPT_LDFLAGS="-Wl,--exclude-modules-for-implib=\`cd ../libsupc++; ls *type_inf*.o -1  | tr '\012' ':'\`tinfo.o:tinfo2.o"
     OPT_LDFLAGS="${OPT_LDFLAGS} -no-undefined -bindir \$(bindir)"
     ;;
   darwin | darwin[1-7] | darwin[1-7].*)
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/backward/strstream gcc-4.5.3/libstdc++-v3/include/backward/strstream
--- gcc-4.5.3.orig/libstdc++-v3/include/backward/strstream	2010-03-16 15:34:53.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/include/backward/strstream	2012-09-23 13:04:58.503583400 -0700
@@ -55,7 +55,7 @@
 
   // Class strstreambuf, a streambuf class that manages an array of char.
   // Note that this class is not a template.
-  class strstreambuf : public basic_streambuf<char, char_traits<char> >
+  class _GLIBCXX_IMPORT strstreambuf : public basic_streambuf<char, char_traits<char> >
   {
   public:
     // Types.
@@ -117,7 +117,7 @@
   };
 
   // Class istrstream, an istream that manages a strstreambuf.
-  class istrstream : public basic_istream<char>
+  class _GLIBCXX_IMPORT istrstream : public basic_istream<char>
   {
   public:
     explicit istrstream(char*);
@@ -134,7 +134,7 @@
   };
 
   // Class ostrstream
-  class ostrstream : public basic_ostream<char>
+  class _GLIBCXX_IMPORT ostrstream : public basic_ostream<char>
   {
   public:
     ostrstream();
@@ -151,7 +151,7 @@
   };
 
   // Class strstream
-  class strstream : public basic_iostream<char>
+  class _GLIBCXX_IMPORT strstream : public basic_iostream<char>
   {
   public:
     typedef char                        char_type;
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/bits/basic_ios.tcc gcc-4.5.3/libstdc++-v3/include/bits/basic_ios.tcc
--- gcc-4.5.3.orig/libstdc++-v3/include/bits/basic_ios.tcc	2009-04-09 08:00:19.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/include/bits/basic_ios.tcc	2012-09-23 13:04:58.505583600 -0700
@@ -175,10 +175,10 @@
   // which are defined via explicit instantiations elsewhere.
   // NB:  This syntax is a GNU extension.
 #if _GLIBCXX_EXTERN_TEMPLATE
-  extern template class basic_ios<char>;
+  extern template class _GLIBCXX_IMPORT basic_ios<char>;
 
 #ifdef _GLIBCXX_USE_WCHAR_T
-  extern template class basic_ios<wchar_t>;
+  extern template class _GLIBCXX_IMPORT basic_ios<wchar_t>;
 #endif
 #endif
 
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/bits/c++config gcc-4.5.3/libstdc++-v3/include/bits/c++config
--- gcc-4.5.3.orig/libstdc++-v3/include/bits/c++config	2009-11-30 15:22:04.000000000 -0800
+++ gcc-4.5.3/libstdc++-v3/include/bits/c++config	2012-09-23 13:04:58.508583900 -0700
@@ -376,4 +376,8 @@
 # endif
 #endif
 
+#ifndef _GLIBCXX_IMPORT
+#define _GLIBCXX_IMPORT
+#endif
+
 // End of prewritten config; the discovered settings follow.
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/bits/codecvt.h gcc-4.5.3/libstdc++-v3/include/bits/codecvt.h
--- gcc-4.5.3.orig/libstdc++-v3/include/bits/codecvt.h	2010-02-09 21:45:24.000000000 -0800
+++ gcc-4.5.3/libstdc++-v3/include/bits/codecvt.h	2012-09-23 13:04:58.512584300 -0700
@@ -476,7 +476,7 @@
   // which are defined via explicit instantiations elsewhere.
   // NB: This syntax is a GNU extension.
 #if _GLIBCXX_EXTERN_TEMPLATE
-  extern template class codecvt_byname<char, char, mbstate_t>;
+  extern template class _GLIBCXX_IMPORT codecvt_byname<char, char, mbstate_t>;
 
   extern template
     const codecvt<char, char, mbstate_t>&
@@ -487,7 +487,7 @@
     has_facet<codecvt<char, char, mbstate_t> >(const locale&);
 
 #ifdef _GLIBCXX_USE_WCHAR_T
-  extern template class codecvt_byname<wchar_t, char, mbstate_t>;
+  extern template class _GLIBCXX_IMPORT codecvt_byname<wchar_t, char, mbstate_t>;
 
   extern template
     const codecvt<wchar_t, char, mbstate_t>&
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/bits/fstream.tcc gcc-4.5.3/libstdc++-v3/include/bits/fstream.tcc
--- gcc-4.5.3.orig/libstdc++-v3/include/bits/fstream.tcc	2009-04-09 08:00:19.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/include/bits/fstream.tcc	2012-09-23 13:04:58.516584700 -0700
@@ -908,16 +908,16 @@
   // which are defined via explicit instantiations elsewhere.
   // NB:  This syntax is a GNU extension.
 #if _GLIBCXX_EXTERN_TEMPLATE
-  extern template class basic_filebuf<char>;
-  extern template class basic_ifstream<char>;
-  extern template class basic_ofstream<char>;
-  extern template class basic_fstream<char>;
+  extern template class _GLIBCXX_IMPORT basic_filebuf<char>;
+  extern template class _GLIBCXX_IMPORT basic_ifstream<char>;
+  extern template class _GLIBCXX_IMPORT basic_ofstream<char>;
+  extern template class _GLIBCXX_IMPORT basic_fstream<char>;
 
 #ifdef _GLIBCXX_USE_WCHAR_T
-  extern template class basic_filebuf<wchar_t>;
-  extern template class basic_ifstream<wchar_t>;
-  extern template class basic_ofstream<wchar_t>;
-  extern template class basic_fstream<wchar_t>;
+  extern template class _GLIBCXX_IMPORT basic_filebuf<wchar_t>;
+  extern template class _GLIBCXX_IMPORT basic_ifstream<wchar_t>;
+  extern template class _GLIBCXX_IMPORT basic_ofstream<wchar_t>;
+  extern template class _GLIBCXX_IMPORT basic_fstream<wchar_t>;
 #endif
 #endif
 
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/bits/ios_base.h gcc-4.5.3/libstdc++-v3/include/bits/ios_base.h
--- gcc-4.5.3.orig/libstdc++-v3/include/bits/ios_base.h	2010-02-16 21:43:24.000000000 -0800
+++ gcc-4.5.3/libstdc++-v3/include/bits/ios_base.h	2012-09-23 13:04:58.520585100 -0700
@@ -204,7 +204,7 @@
    *  people will only see @c ios_base when they need to specify the full
    *  name of the various I/O flags (e.g., the openmodes).
   */
-  class ios_base
+  class _GLIBCXX_IMPORT ios_base
   {
   public:
 
@@ -214,7 +214,7 @@
      *
      *  27.4.2.1.1  Class ios_base::failure
      */
-    class failure : public exception
+    class _GLIBCXX_IMPORT failure : public exception
     {
     public:
       // _GLIBCXX_RESOLVE_LIB_DEFECTS
@@ -529,7 +529,7 @@
     // Used to initialize standard streams. In theory, g++ could use
     // -finit-priority to order this stuff correctly without going
     // through these machinations.
-    class Init
+    class _GLIBCXX_IMPORT Init
     {
       friend class ios_base;
     public:
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/bits/istream.tcc gcc-4.5.3/libstdc++-v3/include/bits/istream.tcc
--- gcc-4.5.3.orig/libstdc++-v3/include/bits/istream.tcc	2009-09-04 17:18:07.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/include/bits/istream.tcc	2012-09-23 13:04:58.523585400 -0700
@@ -1018,7 +1018,7 @@
   // which are defined via explicit instantiations elsewhere.
   // NB:  This syntax is a GNU extension.
 #if _GLIBCXX_EXTERN_TEMPLATE
-  extern template class basic_istream<char>;
+  extern template class _GLIBCXX_IMPORT basic_istream<char>;
   extern template istream& ws(istream&);
   extern template istream& operator>>(istream&, char&);
   extern template istream& operator>>(istream&, char*);
@@ -1041,10 +1041,10 @@
   extern template istream& istream::_M_extract(long double&);
   extern template istream& istream::_M_extract(void*&);
 
-  extern template class basic_iostream<char>;
+  extern template class _GLIBCXX_IMPORT basic_iostream<char>;
 
 #ifdef _GLIBCXX_USE_WCHAR_T
-  extern template class basic_istream<wchar_t>;
+  extern template class _GLIBCXX_IMPORT basic_istream<wchar_t>;
   extern template wistream& ws(wistream&);
   extern template wistream& operator>>(wistream&, wchar_t&);
   extern template wistream& operator>>(wistream&, wchar_t*);
@@ -1063,7 +1063,7 @@
   extern template wistream& wistream::_M_extract(long double&);
   extern template wistream& wistream::_M_extract(void*&);
 
-  extern template class basic_iostream<wchar_t>;
+  extern template class _GLIBCXX_IMPORT basic_iostream<wchar_t>;
 #endif
 #endif
 
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/bits/locale_classes.h gcc-4.5.3/libstdc++-v3/include/bits/locale_classes.h
--- gcc-4.5.3.orig/libstdc++-v3/include/bits/locale_classes.h	2010-02-16 21:43:24.000000000 -0800
+++ gcc-4.5.3/libstdc++-v3/include/bits/locale_classes.h	2012-09-23 13:04:58.526585700 -0700
@@ -59,7 +59,7 @@
    *  This library supports efficient construction and copying of locales
    *  through a reference counting implementation of the locale class.
   */
-  class locale
+  class _GLIBCXX_IMPORT locale
   {
   public:
     // Types:
@@ -67,9 +67,9 @@
     typedef int	category;
 
     // Forward decls and friends:
-    class facet;
-    class id;
-    class _Impl;
+    class _GLIBCXX_IMPORT facet;
+    class _GLIBCXX_IMPORT id;
+    class _GLIBCXX_IMPORT _Impl;
 
     friend class facet;
     friend class _Impl;
@@ -334,7 +334,7 @@
    *
    *  Facets may not be copied or assigned.
   */
-  class locale::facet
+  class _GLIBCXX_IMPORT locale::facet
   {
   private:
     friend class locale;
@@ -429,7 +429,7 @@
    *  cannot be used in a locale.  The locale::id ensures that each class
    *  type gets a unique identifier.
   */
-  class locale::id
+  class _GLIBCXX_IMPORT locale::id
   {
   private:
     friend class locale;
@@ -468,7 +468,7 @@
 
 
   // Implementation object for locale.
-  class locale::_Impl
+  class _GLIBCXX_IMPORT locale::_Impl
   {
   public:
     // Friends.
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/bits/locale_classes.tcc gcc-4.5.3/libstdc++-v3/include/bits/locale_classes.tcc
--- gcc-4.5.3.orig/libstdc++-v3/include/bits/locale_classes.tcc	2009-04-18 14:19:18.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/include/bits/locale_classes.tcc	2012-09-23 13:04:58.529586000 -0700
@@ -241,8 +241,8 @@
   // which are defined via explicit instantiations elsewhere.
   // NB: This syntax is a GNU extension.
 #if _GLIBCXX_EXTERN_TEMPLATE
-  extern template class collate<char>;
-  extern template class collate_byname<char>;
+  extern template class _GLIBCXX_IMPORT collate<char>;
+  extern template class _GLIBCXX_IMPORT collate_byname<char>;
 
   extern template
     const collate<char>&
@@ -253,8 +253,8 @@
     has_facet<collate<char> >(const locale&);
 
 #ifdef _GLIBCXX_USE_WCHAR_T
-  extern template class collate<wchar_t>;
-  extern template class collate_byname<wchar_t>;
+  extern template class _GLIBCXX_IMPORT collate<wchar_t>;
+  extern template class _GLIBCXX_IMPORT collate_byname<wchar_t>;
 
   extern template
     const collate<wchar_t>&
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/bits/locale_facets.h gcc-4.5.3/libstdc++-v3/include/bits/locale_facets.h
--- gcc-4.5.3.orig/libstdc++-v3/include/bits/locale_facets.h	2010-02-18 19:30:46.000000000 -0800
+++ gcc-4.5.3/libstdc++-v3/include/bits/locale_facets.h	2012-09-23 13:04:58.533586400 -0700
@@ -670,7 +670,7 @@
    *  optimizations as well.
   */
   template<>
-    class ctype<char> : public locale::facet, public ctype_base
+    class _GLIBCXX_IMPORT ctype<char> : public locale::facet, public ctype_base
     {
     public:
       // Types:
@@ -1171,7 +1171,7 @@
    *  __ctype_abstract_base<wchar_t>.
   */
   template<>
-    class ctype<wchar_t> : public __ctype_abstract_base<wchar_t>
+    class _GLIBCXX_IMPORT ctype<wchar_t> : public __ctype_abstract_base<wchar_t>
     {
     public:
       // Types:
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/bits/locale_facets.tcc gcc-4.5.3/libstdc++-v3/include/bits/locale_facets.tcc
--- gcc-4.5.3.orig/libstdc++-v3/include/bits/locale_facets.tcc	2009-07-18 15:58:10.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/include/bits/locale_facets.tcc	2012-09-23 13:04:58.537586800 -0700
@@ -1276,11 +1276,11 @@
   // which are defined via explicit instantiations elsewhere.
   // NB: This syntax is a GNU extension.
 #if _GLIBCXX_EXTERN_TEMPLATE
-  extern template class numpunct<char>;
-  extern template class numpunct_byname<char>;
-  extern template class _GLIBCXX_LDBL_NAMESPACE num_get<char>;
-  extern template class _GLIBCXX_LDBL_NAMESPACE num_put<char>;
-  extern template class ctype_byname<char>;
+  extern template class _GLIBCXX_IMPORT numpunct<char>;
+  extern template class _GLIBCXX_IMPORT numpunct_byname<char>;
+  extern template class _GLIBCXX_IMPORT _GLIBCXX_LDBL_NAMESPACE num_get<char>;
+  extern template class _GLIBCXX_IMPORT _GLIBCXX_LDBL_NAMESPACE num_put<char>;
+  extern template class _GLIBCXX_IMPORT ctype_byname<char>;
 
   extern template
     const ctype<char>&
@@ -1315,11 +1315,11 @@
     has_facet<num_get<char> >(const locale&);
 
 #ifdef _GLIBCXX_USE_WCHAR_T
-  extern template class numpunct<wchar_t>;
-  extern template class numpunct_byname<wchar_t>;
-  extern template class _GLIBCXX_LDBL_NAMESPACE num_get<wchar_t>;
-  extern template class _GLIBCXX_LDBL_NAMESPACE num_put<wchar_t>;
-  extern template class ctype_byname<wchar_t>;
+  extern template class _GLIBCXX_IMPORT numpunct<wchar_t>;
+  extern template class _GLIBCXX_IMPORT numpunct_byname<wchar_t>;
+  extern template class _GLIBCXX_IMPORT _GLIBCXX_LDBL_NAMESPACE num_get<wchar_t>;
+  extern template class _GLIBCXX_IMPORT _GLIBCXX_LDBL_NAMESPACE num_put<wchar_t>;
+  extern template class _GLIBCXX_IMPORT ctype_byname<wchar_t>;
 
   extern template
     const ctype<wchar_t>&
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/bits/locale_facets_nonio.tcc gcc-4.5.3/libstdc++-v3/include/bits/locale_facets_nonio.tcc
--- gcc-4.5.3.orig/libstdc++-v3/include/bits/locale_facets_nonio.tcc	2010-01-07 09:20:45.000000000 -0800
+++ gcc-4.5.3/libstdc++-v3/include/bits/locale_facets_nonio.tcc	2012-09-23 13:04:58.542587300 -0700
@@ -1214,19 +1214,19 @@
   // which are defined via explicit instantiations elsewhere.
   // NB: This syntax is a GNU extension.
 #if _GLIBCXX_EXTERN_TEMPLATE
-  extern template class moneypunct<char, false>;
-  extern template class moneypunct<char, true>;
-  extern template class moneypunct_byname<char, false>;
-  extern template class moneypunct_byname<char, true>;
-  extern template class _GLIBCXX_LDBL_NAMESPACE money_get<char>;
-  extern template class _GLIBCXX_LDBL_NAMESPACE money_put<char>;
-  extern template class __timepunct<char>;
-  extern template class time_put<char>;
-  extern template class time_put_byname<char>;
-  extern template class time_get<char>;
-  extern template class time_get_byname<char>;
-  extern template class messages<char>;
-  extern template class messages_byname<char>;
+  extern template class _GLIBCXX_IMPORT moneypunct<char, false>;
+  extern template class _GLIBCXX_IMPORT moneypunct<char, true>;
+  extern template class _GLIBCXX_IMPORT moneypunct_byname<char, false>;
+  extern template class _GLIBCXX_IMPORT moneypunct_byname<char, true>;
+  extern template class _GLIBCXX_IMPORT _GLIBCXX_LDBL_NAMESPACE money_get<char>;
+  extern template class _GLIBCXX_IMPORT _GLIBCXX_LDBL_NAMESPACE money_put<char>;
+  extern template class _GLIBCXX_IMPORT __timepunct<char>;
+  extern template class _GLIBCXX_IMPORT time_put<char>;
+  extern template class _GLIBCXX_IMPORT time_put_byname<char>;
+  extern template class _GLIBCXX_IMPORT time_get<char>;
+  extern template class _GLIBCXX_IMPORT time_get_byname<char>;
+  extern template class _GLIBCXX_IMPORT messages<char>;
+  extern template class _GLIBCXX_IMPORT messages_byname<char>;
 
   extern template
     const moneypunct<char, true>&
@@ -1289,19 +1289,19 @@
     has_facet<messages<char> >(const locale&);
 
 #ifdef _GLIBCXX_USE_WCHAR_T
-  extern template class moneypunct<wchar_t, false>;
-  extern template class moneypunct<wchar_t, true>;
-  extern template class moneypunct_byname<wchar_t, false>;
-  extern template class moneypunct_byname<wchar_t, true>;
-  extern template class _GLIBCXX_LDBL_NAMESPACE money_get<wchar_t>;
-  extern template class _GLIBCXX_LDBL_NAMESPACE money_put<wchar_t>;
-  extern template class __timepunct<wchar_t>;
-  extern template class time_put<wchar_t>;
-  extern template class time_put_byname<wchar_t>;
-  extern template class time_get<wchar_t>;
-  extern template class time_get_byname<wchar_t>;
-  extern template class messages<wchar_t>;
-  extern template class messages_byname<wchar_t>;
+  extern template class _GLIBCXX_IMPORT moneypunct<wchar_t, false>;
+  extern template class _GLIBCXX_IMPORT moneypunct<wchar_t, true>;
+  extern template class _GLIBCXX_IMPORT moneypunct_byname<wchar_t, false>;
+  extern template class _GLIBCXX_IMPORT moneypunct_byname<wchar_t, true>;
+  extern template class _GLIBCXX_IMPORT _GLIBCXX_LDBL_NAMESPACE money_get<wchar_t>;
+  extern template class _GLIBCXX_IMPORT _GLIBCXX_LDBL_NAMESPACE money_put<wchar_t>;
+  extern template class _GLIBCXX_IMPORT __timepunct<wchar_t>;
+  extern template class _GLIBCXX_IMPORT time_put<wchar_t>;
+  extern template class _GLIBCXX_IMPORT time_put_byname<wchar_t>;
+  extern template class _GLIBCXX_IMPORT time_get<wchar_t>;
+  extern template class _GLIBCXX_IMPORT time_get_byname<wchar_t>;
+  extern template class _GLIBCXX_IMPORT messages<wchar_t>;
+  extern template class _GLIBCXX_IMPORT messages_byname<wchar_t>;
 
   extern template
     const moneypunct<wchar_t, true>&
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/bits/ostream.tcc gcc-4.5.3/libstdc++-v3/include/bits/ostream.tcc
--- gcc-4.5.3.orig/libstdc++-v3/include/bits/ostream.tcc	2009-09-04 17:18:07.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/include/bits/ostream.tcc	2012-09-23 13:04:58.545587600 -0700
@@ -357,7 +357,7 @@
   // which are defined via explicit instantiations elsewhere.
   // NB:  This syntax is a GNU extension.
 #if _GLIBCXX_EXTERN_TEMPLATE
-  extern template class basic_ostream<char>;
+  extern template class _GLIBCXX_IMPORT basic_ostream<char>;
   extern template ostream& endl(ostream&);
   extern template ostream& ends(ostream&);
   extern template ostream& flush(ostream&);
@@ -380,7 +380,7 @@
   extern template ostream& ostream::_M_insert(const void*);
 
 #ifdef _GLIBCXX_USE_WCHAR_T
-  extern template class basic_ostream<wchar_t>;
+  extern template class _GLIBCXX_IMPORT basic_ostream<wchar_t>;
   extern template wostream& endl(wostream&);
   extern template wostream& ends(wostream&);
   extern template wostream& flush(wostream&);
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/bits/sstream.tcc gcc-4.5.3/libstdc++-v3/include/bits/sstream.tcc
--- gcc-4.5.3.orig/libstdc++-v3/include/bits/sstream.tcc	2009-04-09 08:00:19.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/include/bits/sstream.tcc	2012-09-23 13:04:58.548587900 -0700
@@ -255,16 +255,16 @@
   // which are defined via explicit instantiations elsewhere.
   // NB:  This syntax is a GNU extension.
 #if _GLIBCXX_EXTERN_TEMPLATE
-  extern template class basic_stringbuf<char>;
-  extern template class basic_istringstream<char>;
-  extern template class basic_ostringstream<char>;
-  extern template class basic_stringstream<char>;
+  extern template class _GLIBCXX_IMPORT basic_stringbuf<char>;
+  extern template class _GLIBCXX_IMPORT basic_istringstream<char>;
+  extern template class _GLIBCXX_IMPORT basic_ostringstream<char>;
+  extern template class _GLIBCXX_IMPORT basic_stringstream<char>;
 
 #ifdef _GLIBCXX_USE_WCHAR_T
-  extern template class basic_stringbuf<wchar_t>;
-  extern template class basic_istringstream<wchar_t>;
-  extern template class basic_ostringstream<wchar_t>;
-  extern template class basic_stringstream<wchar_t>;
+  extern template class _GLIBCXX_IMPORT basic_stringbuf<wchar_t>;
+  extern template class _GLIBCXX_IMPORT basic_istringstream<wchar_t>;
+  extern template class _GLIBCXX_IMPORT basic_ostringstream<wchar_t>;
+  extern template class _GLIBCXX_IMPORT basic_stringstream<wchar_t>;
 #endif
 #endif
 
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/bits/streambuf.tcc gcc-4.5.3/libstdc++-v3/include/bits/streambuf.tcc
--- gcc-4.5.3.orig/libstdc++-v3/include/bits/streambuf.tcc	2009-04-09 08:00:19.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/include/bits/streambuf.tcc	2012-09-23 13:04:58.550588100 -0700
@@ -146,7 +146,7 @@
   // which are defined via explicit instantiations elsewhere.
   // NB:  This syntax is a GNU extension.
 #if _GLIBCXX_EXTERN_TEMPLATE
-  extern template class basic_streambuf<char>;
+  extern template class _GLIBCXX_IMPORT basic_streambuf<char>;
   extern template
     streamsize
     __copy_streambufs(basic_streambuf<char>*,
@@ -157,7 +157,7 @@
 			  basic_streambuf<char>*, bool&);
 
 #ifdef _GLIBCXX_USE_WCHAR_T
-  extern template class basic_streambuf<wchar_t>;
+  extern template class _GLIBCXX_IMPORT basic_streambuf<wchar_t>;
   extern template
     streamsize
     __copy_streambufs(basic_streambuf<wchar_t>*,
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/ext/concurrence.h gcc-4.5.3/libstdc++-v3/include/ext/concurrence.h
--- gcc-4.5.3.orig/libstdc++-v3/include/ext/concurrence.h	2009-04-09 08:00:19.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/include/ext/concurrence.h	2012-09-23 13:04:58.554588500 -0700
@@ -60,7 +60,7 @@
 
   // NB: As this is used in libsupc++, need to only depend on
   // exception. No stdexception classes, no use of std::string.
-  class __concurrence_lock_error : public std::exception
+  class _GLIBCXX_IMPORT __concurrence_lock_error : public std::exception
   {
   public:
     virtual char const*
@@ -68,7 +68,7 @@
     { return "__gnu_cxx::__concurrence_lock_error"; }
   };
 
-  class __concurrence_unlock_error : public std::exception
+  class _GLIBCXX_IMPORT __concurrence_unlock_error : public std::exception
   {
   public:
     virtual char const*
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/std/iostream gcc-4.5.3/libstdc++-v3/include/std/iostream
--- gcc-4.5.3.orig/libstdc++-v3/include/std/iostream	2010-02-04 10:20:34.000000000 -0800
+++ gcc-4.5.3/libstdc++-v3/include/std/iostream	2012-09-23 13:04:58.557588800 -0700
@@ -56,16 +56,16 @@
    *  linked to above.
   */
   //@{
-  extern istream cin;		///< Linked to standard input
-  extern ostream cout;		///< Linked to standard output
-  extern ostream cerr;		///< Linked to standard error (unbuffered)
-  extern ostream clog;		///< Linked to standard error (buffered)
+  extern _GLIBCXX_IMPORT istream cin;		///< Linked to standard input
+  extern _GLIBCXX_IMPORT ostream cout;		///< Linked to standard output
+  extern _GLIBCXX_IMPORT ostream cerr;		///< Linked to standard error (unbuffered)
+  extern _GLIBCXX_IMPORT ostream clog;		///< Linked to standard error (buffered)
 
 #ifdef _GLIBCXX_USE_WCHAR_T
-  extern wistream wcin;		///< Linked to standard input
-  extern wostream wcout;	///< Linked to standard output
-  extern wostream wcerr;	///< Linked to standard error (unbuffered)
-  extern wostream wclog;	///< Linked to standard error (buffered)
+  extern _GLIBCXX_IMPORT wistream wcin;		///< Linked to standard input
+  extern _GLIBCXX_IMPORT wostream wcout;	///< Linked to standard output
+  extern _GLIBCXX_IMPORT wostream wcerr;	///< Linked to standard error (unbuffered)
+  extern _GLIBCXX_IMPORT wostream wclog;	///< Linked to standard error (buffered)
 #endif
   //@}
 
diff -urN gcc-4.5.3.orig/libstdc++-v3/include/std/stdexcept gcc-4.5.3/libstdc++-v3/include/std/stdexcept
--- gcc-4.5.3.orig/libstdc++-v3/include/std/stdexcept	2009-04-09 08:00:19.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/include/std/stdexcept	2012-09-23 13:04:58.561589200 -0700
@@ -50,7 +50,7 @@
    *  program runs (e.g., violations of class invariants).
    *  @brief One of two subclasses of exception.
    */
-  class logic_error : public exception 
+  class _GLIBCXX_IMPORT logic_error : public exception
   {
     string _M_msg;
 
@@ -70,14 +70,14 @@
 
   /** Thrown by the library, or by you, to report domain errors (domain in
    *  the mathematical sense).  */
-  class domain_error : public logic_error 
+  class _GLIBCXX_IMPORT domain_error : public logic_error
   {
   public:
     explicit domain_error(const string& __arg);
   };
 
   /** Thrown to report invalid arguments to functions.  */
-  class invalid_argument : public logic_error 
+  class _GLIBCXX_IMPORT invalid_argument : public logic_error
   {
   public:
     explicit invalid_argument(const string& __arg);
@@ -85,7 +85,7 @@
 
   /** Thrown when an object is constructed that would exceed its maximum
    *  permitted size (e.g., a basic_string instance).  */
-  class length_error : public logic_error 
+  class _GLIBCXX_IMPORT length_error : public logic_error
   {
   public:
     explicit length_error(const string& __arg);
@@ -93,7 +93,7 @@
 
   /** This represents an argument whose value is not within the expected
    *  range (e.g., boundary checks in basic_string).  */
-  class out_of_range : public logic_error 
+  class _GLIBCXX_IMPORT out_of_range : public logic_error
   {
   public:
     explicit out_of_range(const string& __arg);
@@ -104,7 +104,7 @@
    *  the program executes.
    *  @brief One of two subclasses of exception.
    */
-  class runtime_error : public exception 
+  class _GLIBCXX_IMPORT runtime_error : public exception
   {
     string _M_msg;
 
@@ -123,7 +123,7 @@
   };
 
   /** Thrown to indicate range errors in internal computations.  */
-  class range_error : public runtime_error 
+  class _GLIBCXX_IMPORT range_error : public runtime_error
   {
   public:
     explicit range_error(const string& __arg);
@@ -137,7 +137,7 @@
   };
 
   /** Thrown to indicate arithmetic underflow.  */
-  class underflow_error : public runtime_error 
+  class _GLIBCXX_IMPORT underflow_error : public runtime_error
   {
   public:
     explicit underflow_error(const string& __arg);
diff -urN gcc-4.5.3.orig/libstdc++-v3/libsupc++/Makefile.am gcc-4.5.3/libstdc++-v3/libsupc++/Makefile.am
--- gcc-4.5.3.orig/libstdc++-v3/libsupc++/Makefile.am	2009-08-23 00:28:35.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/libsupc++/Makefile.am	2012-09-23 13:04:58.563589400 -0700
@@ -154,7 +154,8 @@
 	       --mode=compile $(CXX) $(TOPLEVEL_INCLUDES) \
 	       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) 
 
-LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))
+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS)) \
+		-no-undefined -bindir $(bindir)
 
 # 3) We'd have a problem when building the shared libstdc++ object if
 # the rules automake generates would be used.  We cannot allow g++ to
diff -urN gcc-4.5.3.orig/libstdc++-v3/libsupc++/Makefile.in gcc-4.5.3/libstdc++-v3/libsupc++/Makefile.in
--- gcc-4.5.3.orig/libstdc++-v3/libsupc++/Makefile.in	2010-04-02 11:18:06.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/libsupc++/Makefile.in	2012-09-23 13:05:50.711803700 -0700
@@ -466,7 +466,9 @@
 	       --mode=compile $(CXX) $(TOPLEVEL_INCLUDES) \
 	       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) 
 
-LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))
+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS)) \
+		-no-undefined -bindir $(bindir)
+
 
 # 3) We'd have a problem when building the shared libstdc++ object if
 # the rules automake generates would be used.  We cannot allow g++ to
diff -urN gcc-4.5.3.orig/libstdc++-v3/libsupc++/exception gcc-4.5.3/libstdc++-v3/libsupc++/exception
--- gcc-4.5.3.orig/libstdc++-v3/libsupc++/exception	2010-02-18 09:58:53.000000000 -0800
+++ gcc-4.5.3/libstdc++-v3/libsupc++/exception	2012-09-23 13:04:58.568589900 -0700
@@ -58,7 +58,7 @@
    *  your own %exception classes, or use a different hierarchy, or to
    *  throw non-class data (e.g., fundamental types).
    */
-  class exception
+  class _GLIBCXX_IMPORT exception
   {
   public:
     exception() throw() { }
@@ -71,7 +71,7 @@
 
   /** If an %exception is thrown which is not listed in a function's
    *  %exception specification, one of these may be thrown.  */
-  class bad_exception : public exception
+  class _GLIBCXX_IMPORT bad_exception : public exception
   {
   public:
     bad_exception() throw() { }
diff -urN gcc-4.5.3.orig/libstdc++-v3/libsupc++/new gcc-4.5.3/libstdc++-v3/libsupc++/new
--- gcc-4.5.3.orig/libstdc++-v3/libsupc++/new	2010-02-18 09:58:53.000000000 -0800
+++ gcc-4.5.3/libstdc++-v3/libsupc++/new	2012-09-23 13:04:58.571590200 -0700
@@ -53,7 +53,7 @@
    *
    *  @c bad_alloc (or classes derived from it) is used to report allocation
    *  errors from the throwing forms of @c new.  */
-  class bad_alloc : public exception 
+  class _GLIBCXX_IMPORT bad_alloc : public exception
   {
   public:
     bad_alloc() throw() { }
diff -urN gcc-4.5.3.orig/libstdc++-v3/libsupc++/typeinfo gcc-4.5.3/libstdc++-v3/libsupc++/typeinfo
--- gcc-4.5.3.orig/libstdc++-v3/libsupc++/typeinfo	2010-02-18 09:58:53.000000000 -0800
+++ gcc-4.5.3/libstdc++-v3/libsupc++/typeinfo	2012-09-23 13:04:58.574590500 -0700
@@ -84,7 +84,7 @@
    *  The @c type_info class describes type information generated by
    *  an implementation.
   */
-  class type_info 
+  class _GLIBCXX_IMPORT type_info 
   {
   public:
     /** Destructor first. Being the first non-inline virtual function, this
@@ -171,7 +171,7 @@
    *
    *  If you attempt an invalid @c dynamic_cast expression, an instance of
    *  this class (or something derived from this class) is thrown.  */
-  class bad_cast : public exception 
+  class _GLIBCXX_IMPORT bad_cast : public exception 
   {
   public:
     bad_cast() throw() { }
@@ -188,7 +188,7 @@
    *  @brief Thrown when a NULL pointer in a @c typeid expression is used.
    *  @ingroup exceptions
    */
-  class bad_typeid : public exception 
+  class _GLIBCXX_IMPORT bad_typeid : public exception 
   {
   public:
     bad_typeid () throw() { }
diff -urN gcc-4.5.3.orig/libstdc++-v3/scripts/testsuite_flags.in gcc-4.5.3/libstdc++-v3/scripts/testsuite_flags.in
--- gcc-4.5.3.orig/libstdc++-v3/scripts/testsuite_flags.in	2007-09-11 15:32:51.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/scripts/testsuite_flags.in	2012-09-23 13:04:58.576590700 -0700
@@ -27,6 +27,7 @@
 BUILD_DIR=@glibcxx_builddir@
 SRC_DIR=@glibcxx_srcdir@
 PREFIX_DIR=@glibcxx_prefixdir@
+target=@target@
 query=$1
 
 case ${query} in
@@ -71,6 +72,12 @@
       ;;
     --cxxldflags)
       SECTIONLDFLAGS="@SECTION_LDFLAGS@ @LIBICONV@"
+      case ${target} in
+	  *cygwin*)
+	  SECTIONLDFLAGS="${SECTIONLDFLAGS} -Wl,--enable-auto-import"
+	  ;;
+      esac
+
       echo ${SECTIONLDFLAGS}
       ;;
     *)
diff -urN gcc-4.5.3.orig/libstdc++-v3/src/Makefile.am gcc-4.5.3/libstdc++-v3/src/Makefile.am
--- gcc-4.5.3.orig/libstdc++-v3/src/Makefile.am	2010-10-11 11:08:36.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/src/Makefile.am	2012-09-23 13:04:58.581591200 -0700
@@ -210,7 +210,8 @@
 	$(top_builddir)/libsupc++/libsupc++convenience.la
 
 libstdc___la_LDFLAGS = \
-	-version-info $(libtool_VERSION) ${version_arg} -lm 
+	-version-info $(libtool_VERSION) ${version_arg} -lm \
+	-no-undefined -bindir $(bindir)
 
 libstdc___la_LINK = $(CXXLINK) $(libstdc___la_LDFLAGS)
 
diff -urN gcc-4.5.3.orig/libstdc++-v3/src/Makefile.in gcc-4.5.3/libstdc++-v3/src/Makefile.in
--- gcc-4.5.3.orig/libstdc++-v3/src/Makefile.in	2010-10-11 11:08:36.000000000 -0700
+++ gcc-4.5.3/libstdc++-v3/src/Makefile.in	2012-09-23 13:05:50.954828000 -0700
@@ -452,7 +452,8 @@
 	$(top_builddir)/libsupc++/libsupc++convenience.la
 
 libstdc___la_LDFLAGS = \
-	-version-info $(libtool_VERSION) ${version_arg} -lm 
+	-version-info $(libtool_VERSION) ${version_arg} -lm \
+	-no-undefined -bindir $(bindir)
 
 libstdc___la_LINK = $(CXXLINK) $(libstdc___la_LDFLAGS)
 
diff -urN gcc-4.5.3.orig/libstdc++-v3/testsuite/lib/libstdc++.exp gcc-4.5.3/libstdc++-v3/testsuite/lib/libstdc++.exp
--- gcc-4.5.3.orig/libstdc++-v3/testsuite/lib/libstdc++.exp	2010-12-17 06:36:49.000000000 -0800
+++ gcc-4.5.3/libstdc++-v3/testsuite/lib/libstdc++.exp	2012-09-23 13:04:58.589592000 -0700
@@ -124,6 +124,9 @@
 	if { [string match "powerpc-*-darwin*" $target_triplet] } {
 	    append DEFAULT_CXXFLAGS " -multiply_defined suppress"
 	} 
+	if { [string match "*-*-cygwin*" $target_triplet] } {
+	    append DEFAULT_CXXFLAGS " -Wl,--enable-auto-import"
+	} 
     }
     v3track DEFAULT_CXXFLAGS 2
 
@@ -144,6 +147,9 @@
         set gccdir [file dirname $gccdir]
 	append ld_library_path_tmp ":${gccdir}"
     }
+    if { [string match "*-*-cygwin*" $target_triplet] } {
+	append ld_library_path_tmp ":${blddir}/../libgcc"
+    }
     v3track gccdir 3
 
     # Locate libgomp. This is only required for parallel mode.
