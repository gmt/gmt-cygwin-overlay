diff -urN libtool-2.4.vanilla/ChangeLog libtool-2.4/ChangeLog
--- libtool-2.4.vanilla/ChangeLog	2010-09-22 07:43:26.000000000 -0700
+++ libtool-2.4/ChangeLog	2012-02-17 00:55:12.762898700 -0800
@@ -1,3 +1,12 @@
+2010-09-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>
+
+	Fix regression in command-line length computation.
+	* libltdl/m4/libtool.m4 (LT_CMD_MAX_LEN): Use `env echo' rather
+	than possibly-undefined func_fallback_echo, to ensure we fork
+	and exec for this test.
+	* NEWS: Update.
+	Regression introduced in v2.2.6-39-g9c3d4d8.
+
 2010-09-22  Gary V. Vaughan  <gary@gnu.org>
 
 	Release 2.4.
diff -urN libtool-2.4.vanilla/libltdl/m4/libtool.m4 libtool-2.4/libltdl/m4/libtool.m4
--- libtool-2.4.vanilla/libltdl/m4/libtool.m4	2010-09-22 01:41:19.000000000 -0700
+++ libtool-2.4/libltdl/m4/libtool.m4	2012-02-17 00:55:12.771898700 -0800
@@ -1639,7 +1639,7 @@
       # If test is not a shell built-in, we'll probably end up computing a
       # maximum length that is only half of the actual maximum length, but
       # we can't tell.
-      while { test "X"`func_fallback_echo "$teststring$teststring" 2>/dev/null` \
+      while { test "X"`env echo "$teststring$teststring" 2>/dev/null` \
 	         = "X$teststring$teststring"; } >/dev/null 2>&1 &&
 	      test $i != 17 # 1/2 MB should be enough
       do
